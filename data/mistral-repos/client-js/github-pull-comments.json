{
  "89": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2404834928",
        "html_url": "https://github.com/mistralai/client-js/pull/89#issuecomment-2404834928",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/89",
        "id": 2404834928,
        "node_id": "IC_kwDOK23oNM6PVt5w",
        "user": {
          "login": "GaspardBT",
          "id": 26529448,
          "node_id": "MDQ6VXNlcjI2NTI5NDQ4",
          "avatar_url": "https://avatars.githubusercontent.com/u/26529448?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GaspardBT",
          "html_url": "https://github.com/GaspardBT",
          "followers_url": "https://api.github.com/users/GaspardBT/followers",
          "following_url": "https://api.github.com/users/GaspardBT/following{/other_user}",
          "gists_url": "https://api.github.com/users/GaspardBT/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GaspardBT/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GaspardBT/subscriptions",
          "organizations_url": "https://api.github.com/users/GaspardBT/orgs",
          "repos_url": "https://api.github.com/users/GaspardBT/repos",
          "events_url": "https://api.github.com/users/GaspardBT/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GaspardBT/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-10-10T11:27:27Z",
        "updated_at": "2024-10-10T11:27:27Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for opening this PR. We have **deprecated** this package in favor of [mistralai/client-ts](https://github.com/mistralai/client-ts), which is the new official Mistral client, **compatible** with both TypeScript and JavaScript.\r\n\r\nYou can find all installation information [here](https://github.com/mistralai/client-ts?tab=readme-ov-file#sdk-installation).\r\n\r\nThis change is effective starting with version 1.0.0 of the [npm package](https://www.npmjs.com/package/@mistralai/mistralai?activeTab=readme).\r\n\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2404834928/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": []
  },
  "76": {
    "issue_comments": [],
    "review_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1611876179",
        "pull_request_review_id": 2074275598,
        "id": 1611876179,
        "node_id": "PRRC_kwDOK23oNM5gE0dT",
        "diff_hunk": "@@ -115,8 +124,17 @@ console.log(`functionParams: ${toolCall.function.arguments}`);\n const functionResult = namesToFunctions[functionName](functionParams);\n \n messages.push(response.choices[0].message);\n-messages.push({role: 'tool', name: functionName, content: functionResult});\n+messages.push({\n+  role: 'tool',\n+  name: functionName,\n+  content: functionResult,\n+  tol_call_id: toolCall.id,",
        "path": "examples/function_calling.js",
        "commit_id": "6f190b55060074330d809c5bc31d0322c83e6b3a",
        "original_commit_id": "2001ad586d3048afbd401c82c68d949645315719",
        "user": {
          "login": "hrjn",
          "id": 2502671,
          "node_id": "MDQ6VXNlcjI1MDI2NzE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2502671?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hrjn",
          "html_url": "https://github.com/hrjn",
          "followers_url": "https://api.github.com/users/hrjn/followers",
          "following_url": "https://api.github.com/users/hrjn/following{/other_user}",
          "gists_url": "https://api.github.com/users/hrjn/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hrjn/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hrjn/subscriptions",
          "organizations_url": "https://api.github.com/users/hrjn/orgs",
          "repos_url": "https://api.github.com/users/hrjn/repos",
          "events_url": "https://api.github.com/users/hrjn/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hrjn/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "```suggestion\r\n  tool_call_id: toolCall.id,\r\n```",
        "created_at": "2024-05-23T15:09:39Z",
        "updated_at": "2024-05-23T15:12:04Z",
        "html_url": "https://github.com/mistralai/client-js/pull/76#discussion_r1611876179",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/76",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1611876179"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/76#discussion_r1611876179"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/76"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1611876179/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 131,
        "side": "RIGHT",
        "original_position": 98,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1611877122",
        "pull_request_review_id": 2074275598,
        "id": 1611877122,
        "node_id": "PRRC_kwDOK23oNM5gE0sC",
        "diff_hunk": "@@ -74,36 +78,41 @@ const tools = [\n       parameters: {\n         type: 'object',\n         required: ['transactionId'],\n-        properties: {transactionId:\n-          {type: 'string', description: 'The transaction id.'},\n+        properties: {\n+          transactionId: {type: 'string', description: 'The transaction id.'},\n         },\n       },\n     },\n   },\n ];\n \n+const model = 'mistral-small-latest';\n \n-const model = 'mistral-large';\n-\n-const client = new MistralClient(apiKey, 'https://api-2.aurocloud.net');\n+const client = new MistralClient(apiKey);\n \n const messages = [\n   {role: 'user', content: 'What\\'s the status of my transaction?'},\n ];\n \n let response = await client.chat({\n-  model: model, messages: messages, tools: tools,\n+  model: model,\n+  messages: messages,\n+  tools: tools,\n });\n \n-\n console.log(response.choices[0].message.content);\n \n-messages.push(\n-  {role: 'assistant', content: response.choices[0].message.content},\n-);\n+messages.push({\n+  role: 'assistant',\n+  content: response.choices[0].message.content,\n+});\n messages.push({role: 'user', content: 'My transaction ID is T1001.'});\n \n-response = await client.chat({model: model, messages: messages, tools: tools});\n+response = await client.chat({\n+  model: model,\n+  messages: messages,\n+  tools: tools,\n+});\n \n const toolCall = response.choices[0].message.toolCalls[0];",
        "path": "examples/function_calling.js",
        "commit_id": "6f190b55060074330d809c5bc31d0322c83e6b3a",
        "original_commit_id": "2001ad586d3048afbd401c82c68d949645315719",
        "user": {
          "login": "hrjn",
          "id": 2502671,
          "node_id": "MDQ6VXNlcjI1MDI2NzE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2502671?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hrjn",
          "html_url": "https://github.com/hrjn",
          "followers_url": "https://api.github.com/users/hrjn/followers",
          "following_url": "https://api.github.com/users/hrjn/following{/other_user}",
          "gists_url": "https://api.github.com/users/hrjn/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hrjn/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hrjn/subscriptions",
          "organizations_url": "https://api.github.com/users/hrjn/orgs",
          "repos_url": "https://api.github.com/users/hrjn/repos",
          "events_url": "https://api.github.com/users/hrjn/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hrjn/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "```suggestion\r\nconst toolCall = response.choices[0].message.tool_calls[0];\r\n```",
        "created_at": "2024-05-23T15:10:19Z",
        "updated_at": "2024-05-23T15:12:04Z",
        "html_url": "https://github.com/mistralai/client-js/pull/76#discussion_r1611877122",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/76",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1611877122"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/76#discussion_r1611877122"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/76"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1611877122/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 117,
        "side": "RIGHT",
        "original_position": 87,
        "position": null,
        "subject_type": "line"
      }
    ]
  },
  "74": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2104250955",
        "html_url": "https://github.com/mistralai/client-js/pull/74#issuecomment-2104250955",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/74",
        "id": 2104250955,
        "node_id": "IC_kwDOK23oNM59bFJL",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-10T09:14:02Z",
        "updated_at": "2024-05-10T09:14:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "Nice :) \r\n\r\nGood to see this getting some love!",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2104250955/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": []
  },
  "73": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2106899780",
        "html_url": "https://github.com/mistralai/client-js/pull/73#issuecomment-2106899780",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/73",
        "id": 2106899780,
        "node_id": "IC_kwDOK23oNM59lL1E",
        "user": {
          "login": "JamieLee0510",
          "id": 43312730,
          "node_id": "MDQ6VXNlcjQzMzEyNzMw",
          "avatar_url": "https://avatars.githubusercontent.com/u/43312730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JamieLee0510",
          "html_url": "https://github.com/JamieLee0510",
          "followers_url": "https://api.github.com/users/JamieLee0510/followers",
          "following_url": "https://api.github.com/users/JamieLee0510/following{/other_user}",
          "gists_url": "https://api.github.com/users/JamieLee0510/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/JamieLee0510/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/JamieLee0510/subscriptions",
          "organizations_url": "https://api.github.com/users/JamieLee0510/orgs",
          "repos_url": "https://api.github.com/users/JamieLee0510/repos",
          "events_url": "https://api.github.com/users/JamieLee0510/events{/privacy}",
          "received_events_url": "https://api.github.com/users/JamieLee0510/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-13T07:59:38Z",
        "updated_at": "2024-05-13T07:59:38Z",
        "author_association": "NONE",
        "body": "Have updated this pr from current diff",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2106899780/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2109242455",
        "html_url": "https://github.com/mistralai/client-js/pull/73#issuecomment-2109242455",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/73",
        "id": 2109242455,
        "node_id": "IC_kwDOK23oNM59uHxX",
        "user": {
          "login": "JamieLee0510",
          "id": 43312730,
          "node_id": "MDQ6VXNlcjQzMzEyNzMw",
          "avatar_url": "https://avatars.githubusercontent.com/u/43312730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JamieLee0510",
          "html_url": "https://github.com/JamieLee0510",
          "followers_url": "https://api.github.com/users/JamieLee0510/followers",
          "following_url": "https://api.github.com/users/JamieLee0510/following{/other_user}",
          "gists_url": "https://api.github.com/users/JamieLee0510/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/JamieLee0510/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/JamieLee0510/subscriptions",
          "organizations_url": "https://api.github.com/users/JamieLee0510/orgs",
          "repos_url": "https://api.github.com/users/JamieLee0510/repos",
          "events_url": "https://api.github.com/users/JamieLee0510/events{/privacy}",
          "received_events_url": "https://api.github.com/users/JamieLee0510/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-14T04:09:33Z",
        "updated_at": "2024-05-14T04:10:21Z",
        "author_association": "NONE",
        "body": "> Some high-level note: we should I think remove `jest` and replace it by `vitest`, especially to get rid of `babel` as a dependency.\r\n\r\nCurrently I still use `jest` but get rid of `babel` by jest config setting `preset: 'ts-jest/presets/default-esm'`, which could work fine as well.\r\n\r\nplease kindly help check the updated PR :)",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2109242455/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2110014418",
        "html_url": "https://github.com/mistralai/client-js/pull/73#issuecomment-2110014418",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/73",
        "id": 2110014418,
        "node_id": "IC_kwDOK23oNM59xEPS",
        "user": {
          "login": "JamieLee0510",
          "id": 43312730,
          "node_id": "MDQ6VXNlcjQzMzEyNzMw",
          "avatar_url": "https://avatars.githubusercontent.com/u/43312730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JamieLee0510",
          "html_url": "https://github.com/JamieLee0510",
          "followers_url": "https://api.github.com/users/JamieLee0510/followers",
          "following_url": "https://api.github.com/users/JamieLee0510/following{/other_user}",
          "gists_url": "https://api.github.com/users/JamieLee0510/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/JamieLee0510/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/JamieLee0510/subscriptions",
          "organizations_url": "https://api.github.com/users/JamieLee0510/orgs",
          "repos_url": "https://api.github.com/users/JamieLee0510/repos",
          "events_url": "https://api.github.com/users/JamieLee0510/events{/privacy}",
          "received_events_url": "https://api.github.com/users/JamieLee0510/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-14T11:56:09Z",
        "updated_at": "2024-05-14T11:56:09Z",
        "author_association": "NONE",
        "body": "all issues raised by @sublimator in previous batch have been resolved, thanks :)",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2110014418/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2110021580",
        "html_url": "https://github.com/mistralai/client-js/pull/73#issuecomment-2110021580",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/73",
        "id": 2110021580,
        "node_id": "IC_kwDOK23oNM59xF_M",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-14T12:00:19Z",
        "updated_at": "2024-05-14T12:00:19Z",
        "author_association": "CONTRIBUTOR",
        "body": "On mobile now, but I think the throw branch also included resp.text()\r\n\r\nOn Tue, 14 May 2024, 6:56\u202fpm Jamie Lee, ***@***.***> wrote:\r\n\r\n> all issues raised by @sublimator <https://github.com/sublimator> in\r\n> previous batch have been resolved, thanks :)\r\n>\r\n> \u2014\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/mistralai/client-js/pull/73#issuecomment-2110014418>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AAEAHG5C7E22J5BUAJ2CAIDZCH3W7AVCNFSM6AAAAABHMGW7YCVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCMJQGAYTINBRHA>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2110021580/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2110022751",
        "html_url": "https://github.com/mistralai/client-js/pull/73#issuecomment-2110022751",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/73",
        "id": 2110022751,
        "node_id": "IC_kwDOK23oNM59xGRf",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-14T12:00:59Z",
        "updated_at": "2024-05-14T12:00:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "And yeah, prettier would rock!\r\nNot sure if lint --fix still works now TS\r\n\r\nOn Tue, 14 May 2024, 7:00\u202fpm Nicholas Dudfield, ***@***.***> wrote:\r\n\r\n> On mobile now, but I think the throw branch also included resp.text()\r\n>\r\n> On Tue, 14 May 2024, 6:56\u202fpm Jamie Lee, ***@***.***> wrote:\r\n>\r\n>> all issues raised by @sublimator <https://github.com/sublimator> in\r\n>> previous batch have been resolved, thanks :)\r\n>>\r\n>> \u2014\r\n>> Reply to this email directly, view it on GitHub\r\n>> <https://github.com/mistralai/client-js/pull/73#issuecomment-2110014418>,\r\n>> or unsubscribe\r\n>> <https://github.com/notifications/unsubscribe-auth/AAEAHG5C7E22J5BUAJ2CAIDZCH3W7AVCNFSM6AAAAABHMGW7YCVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCMJQGAYTINBRHA>\r\n>> .\r\n>> You are receiving this because you were mentioned.Message ID:\r\n>> ***@***.***>\r\n>>\r\n>\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2110022751/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2114264647",
        "html_url": "https://github.com/mistralai/client-js/pull/73#issuecomment-2114264647",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/73",
        "id": 2114264647,
        "node_id": "IC_kwDOK23oNM5-BR5H",
        "user": {
          "login": "JamieLee0510",
          "id": 43312730,
          "node_id": "MDQ6VXNlcjQzMzEyNzMw",
          "avatar_url": "https://avatars.githubusercontent.com/u/43312730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JamieLee0510",
          "html_url": "https://github.com/JamieLee0510",
          "followers_url": "https://api.github.com/users/JamieLee0510/followers",
          "following_url": "https://api.github.com/users/JamieLee0510/following{/other_user}",
          "gists_url": "https://api.github.com/users/JamieLee0510/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/JamieLee0510/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/JamieLee0510/subscriptions",
          "organizations_url": "https://api.github.com/users/JamieLee0510/orgs",
          "repos_url": "https://api.github.com/users/JamieLee0510/repos",
          "events_url": "https://api.github.com/users/JamieLee0510/events{/privacy}",
          "received_events_url": "https://api.github.com/users/JamieLee0510/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-16T07:25:15Z",
        "updated_at": "2024-05-16T07:25:15Z",
        "author_association": "NONE",
        "body": "Is it possible to deal with code formatting in other PR?\r\nI think it could add other config file after discussion. ",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2114264647/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2155519749",
        "html_url": "https://github.com/mistralai/client-js/pull/73#issuecomment-2155519749",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/73",
        "id": 2155519749,
        "node_id": "IC_kwDOK23oNM6Aep8F",
        "user": {
          "login": "jwerre",
          "id": 747587,
          "node_id": "MDQ6VXNlcjc0NzU4Nw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/747587?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jwerre",
          "html_url": "https://github.com/jwerre",
          "followers_url": "https://api.github.com/users/jwerre/followers",
          "following_url": "https://api.github.com/users/jwerre/following{/other_user}",
          "gists_url": "https://api.github.com/users/jwerre/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/jwerre/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/jwerre/subscriptions",
          "organizations_url": "https://api.github.com/users/jwerre/orgs",
          "repos_url": "https://api.github.com/users/jwerre/repos",
          "events_url": "https://api.github.com/users/jwerre/events{/privacy}",
          "received_events_url": "https://api.github.com/users/jwerre/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-06-07T20:45:23Z",
        "updated_at": "2024-06-07T20:45:53Z",
        "author_association": "NONE",
        "body": "Looking forward to this! Lack of Commonjs support has prevented me from using this.",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2155519749/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2155844817",
        "html_url": "https://github.com/mistralai/client-js/pull/73#issuecomment-2155844817",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/73",
        "id": 2155844817,
        "node_id": "IC_kwDOK23oNM6Af5TR",
        "user": {
          "login": "JamieLee0510",
          "id": 43312730,
          "node_id": "MDQ6VXNlcjQzMzEyNzMw",
          "avatar_url": "https://avatars.githubusercontent.com/u/43312730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JamieLee0510",
          "html_url": "https://github.com/JamieLee0510",
          "followers_url": "https://api.github.com/users/JamieLee0510/followers",
          "following_url": "https://api.github.com/users/JamieLee0510/following{/other_user}",
          "gists_url": "https://api.github.com/users/JamieLee0510/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/JamieLee0510/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/JamieLee0510/subscriptions",
          "organizations_url": "https://api.github.com/users/JamieLee0510/orgs",
          "repos_url": "https://api.github.com/users/JamieLee0510/repos",
          "events_url": "https://api.github.com/users/JamieLee0510/events{/privacy}",
          "received_events_url": "https://api.github.com/users/JamieLee0510/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-06-08T06:58:48Z",
        "updated_at": "2024-06-08T06:58:48Z",
        "author_association": "NONE",
        "body": "> Looking forward to this! Lack of Commonjs support has prevented me from using this.\r\n\r\nsure let me catch up the latest commit and merge into this pr\r\nhope Mistral team could approve this pr ",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2155844817/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2155952632",
        "html_url": "https://github.com/mistralai/client-js/pull/73#issuecomment-2155952632",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/73",
        "id": 2155952632,
        "node_id": "IC_kwDOK23oNM6AgTn4",
        "user": {
          "login": "JamieLee0510",
          "id": 43312730,
          "node_id": "MDQ6VXNlcjQzMzEyNzMw",
          "avatar_url": "https://avatars.githubusercontent.com/u/43312730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JamieLee0510",
          "html_url": "https://github.com/JamieLee0510",
          "followers_url": "https://api.github.com/users/JamieLee0510/followers",
          "following_url": "https://api.github.com/users/JamieLee0510/following{/other_user}",
          "gists_url": "https://api.github.com/users/JamieLee0510/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/JamieLee0510/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/JamieLee0510/subscriptions",
          "organizations_url": "https://api.github.com/users/JamieLee0510/orgs",
          "repos_url": "https://api.github.com/users/JamieLee0510/repos",
          "events_url": "https://api.github.com/users/JamieLee0510/events{/privacy}",
          "received_events_url": "https://api.github.com/users/JamieLee0510/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-06-08T10:06:44Z",
        "updated_at": "2024-06-08T10:06:44Z",
        "author_association": "NONE",
        "body": "@fuegoio \r\nPlease kindly help check the updated version.\r\nThis version is also fetched up job and file features~ ",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2155952632/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2404833716",
        "html_url": "https://github.com/mistralai/client-js/pull/73#issuecomment-2404833716",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/73",
        "id": 2404833716,
        "node_id": "IC_kwDOK23oNM6PVtm0",
        "user": {
          "login": "GaspardBT",
          "id": 26529448,
          "node_id": "MDQ6VXNlcjI2NTI5NDQ4",
          "avatar_url": "https://avatars.githubusercontent.com/u/26529448?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GaspardBT",
          "html_url": "https://github.com/GaspardBT",
          "followers_url": "https://api.github.com/users/GaspardBT/followers",
          "following_url": "https://api.github.com/users/GaspardBT/following{/other_user}",
          "gists_url": "https://api.github.com/users/GaspardBT/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GaspardBT/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GaspardBT/subscriptions",
          "organizations_url": "https://api.github.com/users/GaspardBT/orgs",
          "repos_url": "https://api.github.com/users/GaspardBT/repos",
          "events_url": "https://api.github.com/users/GaspardBT/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GaspardBT/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-10-10T11:26:53Z",
        "updated_at": "2024-10-10T11:26:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for opening this PR. We have **deprecated** this package in favor of [mistralai/client-ts](https://github.com/mistralai/client-ts), which is the new official Mistral client, **compatible** with both TypeScript and JavaScript.\r\n\r\nYou can find all installation information [here](https://github.com/mistralai/client-ts?tab=readme-ov-file#sdk-installation).\r\n\r\nThis change is effective starting with version 1.0.0 of the [npm package](https://www.npmjs.com/package/@mistralai/mistralai?activeTab=readme).\r\n\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2404833716/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1598053517",
        "pull_request_review_id": 2051994382,
        "id": 1598053517,
        "node_id": "PRRC_kwDOK23oNM5fQFyN",
        "diff_hunk": "@@ -0,0 +1,9 @@\n+export let isNode = false;\n+\n+export async function initializeFetch() {\n+  if (typeof window === 'undefined' || typeof globalThis.fetch === 'undefined') {\n+    const nodeFetch = await import('node-fetch');\n+    globalThis.fetch = nodeFetch.default as any;\n+    isNode = true;\n+  }",
        "path": "src/utils/init-fetch.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "488be50a3202b92c64d95a6ebc1a11c8f6d77705",
        "user": {
          "login": "fuegoio",
          "id": 321778,
          "node_id": "MDQ6VXNlcjMyMTc3OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/321778?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fuegoio",
          "html_url": "https://github.com/fuegoio",
          "followers_url": "https://api.github.com/users/fuegoio/followers",
          "following_url": "https://api.github.com/users/fuegoio/following{/other_user}",
          "gists_url": "https://api.github.com/users/fuegoio/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fuegoio/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fuegoio/subscriptions",
          "organizations_url": "https://api.github.com/users/fuegoio/orgs",
          "repos_url": "https://api.github.com/users/fuegoio/repos",
          "events_url": "https://api.github.com/users/fuegoio/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fuegoio/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Here you need to take the last PR into account as this code is not well-behaved :) https://github.com/mistralai/client-js/pull/66\r\n\r\nEspecially you need to export it as a special fetch instead of overriding the global one.",
        "created_at": "2024-05-13T08:12:18Z",
        "updated_at": "2024-05-13T08:42:04Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1598053517",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1598053517"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1598053517"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1598053517/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 8,
        "side": "RIGHT",
        "original_position": 8,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1598054622",
        "pull_request_review_id": 2051994382,
        "id": 1598054622,
        "node_id": "PRRC_kwDOK23oNM5fQGDe",
        "diff_hunk": "",
        "path": "src/utils/type.ts",
        "commit_id": "488be50a3202b92c64d95a6ebc1a11c8f6d77705",
        "original_commit_id": "488be50a3202b92c64d95a6ebc1a11c8f6d77705",
        "user": {
          "login": "fuegoio",
          "id": 321778,
          "node_id": "MDQ6VXNlcjMyMTc3OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/321778?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fuegoio",
          "html_url": "https://github.com/fuegoio",
          "followers_url": "https://api.github.com/users/fuegoio/followers",
          "following_url": "https://api.github.com/users/fuegoio/following{/other_user}",
          "gists_url": "https://api.github.com/users/fuegoio/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fuegoio/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fuegoio/subscriptions",
          "organizations_url": "https://api.github.com/users/fuegoio/orgs",
          "repos_url": "https://api.github.com/users/fuegoio/repos",
          "events_url": "https://api.github.com/users/fuegoio/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fuegoio/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Could you combine the JSDoc with the Typescript definitions please :)? You need to add the fields description as comments above fields in the TS def.",
        "created_at": "2024-05-13T08:13:08Z",
        "updated_at": "2024-05-13T08:42:04Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1598054622",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1598054622"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1598054622"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1598054622/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 1,
        "original_line": 1,
        "side": "RIGHT",
        "original_position": 1,
        "position": 1,
        "subject_type": "file"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1598056954",
        "pull_request_review_id": 2051994382,
        "id": 1598056954,
        "node_id": "PRRC_kwDOK23oNM5fQGn6",
        "diff_hunk": "@@ -7,135 +10,115 @@ import {\n   mockEmbeddingResponsePayload,\n   mockChatResponsePayload,\n   mockFetchStream,\n-} from './utils';\n+} from './test-utils';\n+\n+interface ChatMessage {\n+  role: string;\n+  content: string;\n+}\n+\n+interface ChatParams {\n+  model: string;\n+  messages: ChatMessage[];\n+  safeMode?: boolean;\n+  safePrompt?: boolean;\n+}\n+\n+interface ChatStreamParams extends ChatParams {\n+  [key: string]: any;\n+}\n \n-// Test the list models endpoint\n describe('Mistral Client', () => {\n-  let client;\n+  let client: MistralClient;\n+\n   beforeEach(() => {\n     client = new MistralClient();\n   });\n \n   describe('chat()', () => {\n-    it('should return a chat response object', async() => {\n-      // Mock the fetch function\n+    it('should return a chat response object', async () => {\n       const mockResponse = mockChatResponsePayload();\n-      client._fetch = mockFetch(200, mockResponse);\n+      globalThis.fetch = mockFetch(200, mockResponse) as any;",
        "path": "tests/client.test.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "488be50a3202b92c64d95a6ebc1a11c8f6d77705",
        "user": {
          "login": "fuegoio",
          "id": 321778,
          "node_id": "MDQ6VXNlcjMyMTc3OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/321778?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fuegoio",
          "html_url": "https://github.com/fuegoio",
          "followers_url": "https://api.github.com/users/fuegoio/followers",
          "following_url": "https://api.github.com/users/fuegoio/following{/other_user}",
          "gists_url": "https://api.github.com/users/fuegoio/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fuegoio/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fuegoio/subscriptions",
          "organizations_url": "https://api.github.com/users/fuegoio/orgs",
          "repos_url": "https://api.github.com/users/fuegoio/repos",
          "events_url": "https://api.github.com/users/fuegoio/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fuegoio/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "See my comment above but let's use a private `fetch` only for our package!",
        "created_at": "2024-05-13T08:14:58Z",
        "updated_at": "2024-05-13T08:42:04Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1598056954",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1598056954"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1598056954"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1598056954/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 41,
        "side": "RIGHT",
        "original_position": 47,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1598058508",
        "pull_request_review_id": 2051994382,
        "id": 1598058508,
        "node_id": "PRRC_kwDOK23oNM5fQHAM",
        "diff_hunk": "@@ -1,12 +1,71 @@\n-import jest from 'jest-mock';\n+import { jest } from '@jest/globals';\n \n-/**\n- * Mock the fetch function\n- * @param {*} status\n- * @param {*} payload\n- * @return {Object}\n- */\n-export function mockFetch(status, payload) {\n+interface FetchResponse {\n+  json: () => Promise<any>;\n+  text: () => Promise<string>;\n+  status: number;\n+  ok: boolean;\n+}\n+\n+interface FetchStreamResponse {\n+  status: number;\n+  ok: boolean;\n+  body: AsyncGenerator;\n+}\n+\n+interface ModelPermission {\n+  id: string;\n+  object: string;\n+  created: number;\n+  allow_create_engine: boolean;\n+  allow_sampling: boolean;\n+  allow_logprobs: boolean;\n+  allow_search_indices: boolean;\n+  allow_view: boolean;\n+  allow_fine_tuning: boolean;\n+  organization: string;\n+  group: null | string;\n+  is_blocking: boolean;\n+}\n+\n+interface Model {\n+  id: string;\n+  object: string;\n+  created: number;\n+  owned_by: string;\n+  root: null;\n+  parent: null;\n+  permission: ModelPermission[];\n+}\n+\n+interface ModelsList {\n+  object: string;\n+  data: Model[];\n+}\n+\n+interface ChatCompletionChoice {\n+  finish_reason: string | null;\n+  message?: {\n+    role: string;\n+    content: string;\n+  };\n+  index: number;\n+}\n+\n+interface ChatCompletion {\n+  id: string;\n+  object: string;\n+  created: number;\n+  choices: ChatCompletionChoice[];\n+  model: string;\n+  usage: {\n+    prompt_tokens: number;\n+    total_tokens: number;\n+    completion_tokens: number;\n+  };\n+}",
        "path": "tests/test-utils.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "488be50a3202b92c64d95a6ebc1a11c8f6d77705",
        "user": {
          "login": "fuegoio",
          "id": 321778,
          "node_id": "MDQ6VXNlcjMyMTc3OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/321778?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fuegoio",
          "html_url": "https://github.com/fuegoio",
          "followers_url": "https://api.github.com/users/fuegoio/followers",
          "following_url": "https://api.github.com/users/fuegoio/following{/other_user}",
          "gists_url": "https://api.github.com/users/fuegoio/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fuegoio/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fuegoio/subscriptions",
          "organizations_url": "https://api.github.com/users/fuegoio/orgs",
          "repos_url": "https://api.github.com/users/fuegoio/repos",
          "events_url": "https://api.github.com/users/fuegoio/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fuegoio/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Why do you need to put the interfaces again here?",
        "created_at": "2024-05-13T08:16:12Z",
        "updated_at": "2024-05-13T08:42:04Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1598058508",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1598058508"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1598058508"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1598058508/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 66,
        "side": "RIGHT",
        "original_position": 74,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1598059523",
        "pull_request_review_id": 2051994382,
        "id": 1598059523,
        "node_id": "PRRC_kwDOK23oNM5fQHQD",
        "diff_hunk": "@@ -0,0 +1,10 @@\n+import { defineConfig } from \"tsup\"\n+\n+export default defineConfig({\n+    format:['cjs', 'esm'],\n+    entry:[\"./src/index.ts\"],\n+    dts:true,\n+    shims:true,\n+    skipNodeModulesBundle:true,\n+    clean:true\n+})",
        "path": "tsup.config.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "488be50a3202b92c64d95a6ebc1a11c8f6d77705",
        "user": {
          "login": "fuegoio",
          "id": 321778,
          "node_id": "MDQ6VXNlcjMyMTc3OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/321778?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fuegoio",
          "html_url": "https://github.com/fuegoio",
          "followers_url": "https://api.github.com/users/fuegoio/followers",
          "following_url": "https://api.github.com/users/fuegoio/following{/other_user}",
          "gists_url": "https://api.github.com/users/fuegoio/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fuegoio/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fuegoio/subscriptions",
          "organizations_url": "https://api.github.com/users/fuegoio/orgs",
          "repos_url": "https://api.github.com/users/fuegoio/repos",
          "events_url": "https://api.github.com/users/fuegoio/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fuegoio/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Does it build with source maps as well?",
        "created_at": "2024-05-13T08:17:01Z",
        "updated_at": "2024-05-13T08:42:04Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1598059523",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1598059523"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1598059523"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1598059523/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 11,
        "original_line": 10,
        "side": "RIGHT",
        "original_position": 10,
        "position": 11,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599347063",
        "pull_request_review_id": 2054232501,
        "id": 1599347063,
        "node_id": "PRRC_kwDOK23oNM5fVBl3",
        "diff_hunk": "@@ -0,0 +1,10 @@\n+import { defineConfig } from \"tsup\"\n+\n+export default defineConfig({\n+    format:['cjs', 'esm'],\n+    entry:[\"./src/index.ts\"],\n+    dts:true,\n+    shims:true,\n+    skipNodeModulesBundle:true,\n+    clean:true\n+})",
        "path": "tsup.config.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "488be50a3202b92c64d95a6ebc1a11c8f6d77705",
        "user": {
          "login": "JamieLee0510",
          "id": 43312730,
          "node_id": "MDQ6VXNlcjQzMzEyNzMw",
          "avatar_url": "https://avatars.githubusercontent.com/u/43312730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JamieLee0510",
          "html_url": "https://github.com/JamieLee0510",
          "followers_url": "https://api.github.com/users/JamieLee0510/followers",
          "following_url": "https://api.github.com/users/JamieLee0510/following{/other_user}",
          "gists_url": "https://api.github.com/users/JamieLee0510/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/JamieLee0510/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/JamieLee0510/subscriptions",
          "organizations_url": "https://api.github.com/users/JamieLee0510/orgs",
          "repos_url": "https://api.github.com/users/JamieLee0510/repos",
          "events_url": "https://api.github.com/users/JamieLee0510/events{/privacy}",
          "received_events_url": "https://api.github.com/users/JamieLee0510/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "yes could build source map in tsup.",
        "created_at": "2024-05-14T04:04:18Z",
        "updated_at": "2024-05-14T04:04:18Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1599347063",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "NONE",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599347063"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1599347063"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599347063/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 11,
        "original_line": 10,
        "side": "RIGHT",
        "in_reply_to_id": 1598059523,
        "original_position": 10,
        "position": 11,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599347219",
        "pull_request_review_id": 2054232786,
        "id": 1599347219,
        "node_id": "PRRC_kwDOK23oNM5fVBoT",
        "diff_hunk": "@@ -1,12 +1,71 @@\n-import jest from 'jest-mock';\n+import { jest } from '@jest/globals';\n \n-/**\n- * Mock the fetch function\n- * @param {*} status\n- * @param {*} payload\n- * @return {Object}\n- */\n-export function mockFetch(status, payload) {\n+interface FetchResponse {\n+  json: () => Promise<any>;\n+  text: () => Promise<string>;\n+  status: number;\n+  ok: boolean;\n+}\n+\n+interface FetchStreamResponse {\n+  status: number;\n+  ok: boolean;\n+  body: AsyncGenerator;\n+}\n+\n+interface ModelPermission {\n+  id: string;\n+  object: string;\n+  created: number;\n+  allow_create_engine: boolean;\n+  allow_sampling: boolean;\n+  allow_logprobs: boolean;\n+  allow_search_indices: boolean;\n+  allow_view: boolean;\n+  allow_fine_tuning: boolean;\n+  organization: string;\n+  group: null | string;\n+  is_blocking: boolean;\n+}\n+\n+interface Model {\n+  id: string;\n+  object: string;\n+  created: number;\n+  owned_by: string;\n+  root: null;\n+  parent: null;\n+  permission: ModelPermission[];\n+}\n+\n+interface ModelsList {\n+  object: string;\n+  data: Model[];\n+}\n+\n+interface ChatCompletionChoice {\n+  finish_reason: string | null;\n+  message?: {\n+    role: string;\n+    content: string;\n+  };\n+  index: number;\n+}\n+\n+interface ChatCompletion {\n+  id: string;\n+  object: string;\n+  created: number;\n+  choices: ChatCompletionChoice[];\n+  model: string;\n+  usage: {\n+    prompt_tokens: number;\n+    total_tokens: number;\n+    completion_tokens: number;\n+  };\n+}",
        "path": "tests/test-utils.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "488be50a3202b92c64d95a6ebc1a11c8f6d77705",
        "user": {
          "login": "JamieLee0510",
          "id": 43312730,
          "node_id": "MDQ6VXNlcjQzMzEyNzMw",
          "avatar_url": "https://avatars.githubusercontent.com/u/43312730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JamieLee0510",
          "html_url": "https://github.com/JamieLee0510",
          "followers_url": "https://api.github.com/users/JamieLee0510/followers",
          "following_url": "https://api.github.com/users/JamieLee0510/following{/other_user}",
          "gists_url": "https://api.github.com/users/JamieLee0510/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/JamieLee0510/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/JamieLee0510/subscriptions",
          "organizations_url": "https://api.github.com/users/JamieLee0510/orgs",
          "repos_url": "https://api.github.com/users/JamieLee0510/repos",
          "events_url": "https://api.github.com/users/JamieLee0510/events{/privacy}",
          "received_events_url": "https://api.github.com/users/JamieLee0510/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "just clean it in further commit.",
        "created_at": "2024-05-14T04:04:41Z",
        "updated_at": "2024-05-14T04:04:41Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1599347219",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "NONE",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599347219"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1599347219"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599347219/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 66,
        "side": "RIGHT",
        "in_reply_to_id": 1598058508,
        "original_position": 74,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599347690",
        "pull_request_review_id": 2054233343,
        "id": 1599347690,
        "node_id": "PRRC_kwDOK23oNM5fVBvq",
        "diff_hunk": "@@ -0,0 +1,9 @@\n+export let isNode = false;\n+\n+export async function initializeFetch() {\n+  if (typeof window === 'undefined' || typeof globalThis.fetch === 'undefined') {\n+    const nodeFetch = await import('node-fetch');\n+    globalThis.fetch = nodeFetch.default as any;\n+    isNode = true;\n+  }",
        "path": "src/utils/init-fetch.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "488be50a3202b92c64d95a6ebc1a11c8f6d77705",
        "user": {
          "login": "JamieLee0510",
          "id": 43312730,
          "node_id": "MDQ6VXNlcjQzMzEyNzMw",
          "avatar_url": "https://avatars.githubusercontent.com/u/43312730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JamieLee0510",
          "html_url": "https://github.com/JamieLee0510",
          "followers_url": "https://api.github.com/users/JamieLee0510/followers",
          "following_url": "https://api.github.com/users/JamieLee0510/following{/other_user}",
          "gists_url": "https://api.github.com/users/JamieLee0510/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/JamieLee0510/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/JamieLee0510/subscriptions",
          "organizations_url": "https://api.github.com/users/JamieLee0510/orgs",
          "repos_url": "https://api.github.com/users/JamieLee0510/repos",
          "events_url": "https://api.github.com/users/JamieLee0510/events{/privacy}",
          "received_events_url": "https://api.github.com/users/JamieLee0510/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "have updated the related fetch code~",
        "created_at": "2024-05-14T04:05:23Z",
        "updated_at": "2024-05-14T04:05:23Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1599347690",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "NONE",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599347690"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1599347690"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599347690/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 8,
        "side": "RIGHT",
        "in_reply_to_id": 1598053517,
        "original_position": 8,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599784750",
        "pull_request_review_id": 2054952656,
        "id": 1599784750,
        "node_id": "PRRC_kwDOK23oNM5fWscu",
        "diff_hunk": "@@ -1,132 +1,121 @@\n-const VERSION = '0.0.3';\n+import { ChatCompletionRequest, ChatCompletionResponse, ChatCompletionResponseChunk, ChatRequestOptions, EmbeddingResponse, ListModelsResponse, MistralChatCompletionRequest } from './utils/type';\n+import { MistralAPIError } from './utils/api-error';\n+import { configuredFetch } from './utils/init-fetch';\n+import { combineSignals } from './utils/helper';\n+\n+const VERSION = '0.2.0';\n const RETRY_STATUS_CODES = [429, 500, 502, 503, 504];\n const ENDPOINT = 'https://api.mistral.ai';\n \n-// We can't use a top level await if eventually this is to be converted\n-// to typescript and compiled to commonjs, or similarly using babel.\n-const configuredFetch = Promise.resolve(\n-  globalThis.fetch ?? import('node-fetch').then((m) => m.default));\n-\n-/**\n- * MistralAPIError\n- * @return {MistralAPIError}\n- * @extends {Error}\n- */\n-class MistralAPIError extends Error {\n-  /**\n-   * A simple error class for Mistral API errors\n-   * @param {*} message\n-   */\n-  constructor(message) {\n-    super(message);\n-    this.name = 'MistralAPIError';\n-  }\n-};\n-\n-/**\n- * @param {Array<AbortSignal|undefined>} signals to merge\n- * @return {AbortSignal} signal which will abort when any of signals abort\n- */\n-function combineSignals(signals) {\n-  const controller = new AbortController();\n-  signals.forEach((signal) => {\n-    if (!signal) {\n-      return;\n-    }\n-\n-    signal.addEventListener('abort', () => {\n-      controller.abort(signal.reason);\n-    }, {once: true});\n-\n-    if (signal.aborted) {\n-      controller.abort(signal.reason);\n-    }\n-  });\n-\n-  return controller.signal;\n-}\n-\n /**\n  * MistralClient\n  * @return {MistralClient}\n  */\n-class MistralClient {\n-  /**\n-   * A simple and lightweight client for the Mistral API\n-   * @param {*} apiKey can be set as an environment variable MISTRAL_API_KEY,\n-   * or provided in this parameter\n-   * @param {*} endpoint defaults to https://api.mistral.ai\n-   * @param {*} maxRetries defaults to 5\n-   * @param {*} timeout defaults to 120 seconds\n-   */\n-  constructor(\n-    apiKey = process.env.MISTRAL_API_KEY,\n-    endpoint = ENDPOINT,\n-    maxRetries = 5,\n-    timeout = 120,\n-  ) {\n-    this.endpoint = endpoint;\n-    this.apiKey = apiKey;\n+export default class MistralClient {\n+  private apiKey: string;",
        "path": "src/mistral-client.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "5b7ea12daf5541d721f4368e2f68157a03e5efc0",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "for better or worse, these were public fields in the .d.ts file from 0.2",
        "created_at": "2024-05-14T10:32:54Z",
        "updated_at": "2024-05-14T10:32:55Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1599784750",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599784750"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1599784750"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599784750/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 15,
        "side": "RIGHT",
        "original_position": 77,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599786436",
        "pull_request_review_id": 2054955327,
        "id": 1599786436,
        "node_id": "PRRC_kwDOK23oNM5fWs3E",
        "diff_hunk": "@@ -1,132 +1,121 @@\n-const VERSION = '0.0.3';\n+import { ChatCompletionRequest, ChatCompletionResponse, ChatCompletionResponseChunk, ChatRequestOptions, EmbeddingResponse, ListModelsResponse, MistralChatCompletionRequest } from './utils/type';\n+import { MistralAPIError } from './utils/api-error';\n+import { configuredFetch } from './utils/init-fetch';\n+import { combineSignals } from './utils/helper';\n+\n+const VERSION = '0.2.0';\n const RETRY_STATUS_CODES = [429, 500, 502, 503, 504];\n const ENDPOINT = 'https://api.mistral.ai';\n \n-// We can't use a top level await if eventually this is to be converted\n-// to typescript and compiled to commonjs, or similarly using babel.\n-const configuredFetch = Promise.resolve(\n-  globalThis.fetch ?? import('node-fetch').then((m) => m.default));\n-\n-/**\n- * MistralAPIError\n- * @return {MistralAPIError}\n- * @extends {Error}\n- */\n-class MistralAPIError extends Error {\n-  /**\n-   * A simple error class for Mistral API errors\n-   * @param {*} message\n-   */\n-  constructor(message) {\n-    super(message);\n-    this.name = 'MistralAPIError';\n-  }\n-};\n-\n-/**\n- * @param {Array<AbortSignal|undefined>} signals to merge\n- * @return {AbortSignal} signal which will abort when any of signals abort\n- */\n-function combineSignals(signals) {\n-  const controller = new AbortController();\n-  signals.forEach((signal) => {\n-    if (!signal) {\n-      return;\n-    }\n-\n-    signal.addEventListener('abort', () => {\n-      controller.abort(signal.reason);\n-    }, {once: true});\n-\n-    if (signal.aborted) {\n-      controller.abort(signal.reason);\n-    }\n-  });\n-\n-  return controller.signal;\n-}\n-\n /**\n  * MistralClient\n  * @return {MistralClient}\n  */\n-class MistralClient {\n-  /**\n-   * A simple and lightweight client for the Mistral API\n-   * @param {*} apiKey can be set as an environment variable MISTRAL_API_KEY,\n-   * or provided in this parameter\n-   * @param {*} endpoint defaults to https://api.mistral.ai\n-   * @param {*} maxRetries defaults to 5\n-   * @param {*} timeout defaults to 120 seconds\n-   */\n-  constructor(\n-    apiKey = process.env.MISTRAL_API_KEY,\n-    endpoint = ENDPOINT,\n-    maxRetries = 5,\n-    timeout = 120,\n-  ) {\n-    this.endpoint = endpoint;\n-    this.apiKey = apiKey;\n+export default class MistralClient {\n+  private apiKey: string;\n+  private endpoint: string;\n+  private maxRetries: number;\n+  private timeout: number;\n+  private modelDefault?: string;\n+\n \n+  constructor(apiKey = process.env.MISTRAL_API_KEY!, endpoint = ENDPOINT, maxRetries = 5, timeout = 120) {\n+    this.apiKey = apiKey;\n+    this.endpoint = endpoint;\n     this.maxRetries = maxRetries;\n     this.timeout = timeout;\n-\n-    if (this.endpoint.indexOf('inference.azure.com')) {\n+    if (this.endpoint.includes('inference.azure.com')) {\n       this.modelDefault = 'mistral';\n     }\n   }\n \n   /**\n-   * @return {Promise}\n-   * @private\n-   * @param {...*} args - fetch args\n    * hook point for non-global fetch override\n+   * @param input \n+   * @param init \n+   * @returns \n    */\n-  async _fetch(...args) {\n+  public async _fetch(input: string | Request, init?: RequestInit){",
        "path": "src/mistral-client.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "5b7ea12daf5541d721f4368e2f68157a03e5efc0",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "This should be private. You can access it in the tests as client['_fetch'] ",
        "created_at": "2024-05-14T10:34:03Z",
        "updated_at": "2024-05-14T10:34:03Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1599786436",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599786436"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1599786436"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599786436/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 38,
        "side": "RIGHT",
        "original_position": 106,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599787778",
        "pull_request_review_id": 2054957629,
        "id": 1599787778,
        "node_id": "PRRC_kwDOK23oNM5fWtMC",
        "diff_hunk": "@@ -1,132 +1,121 @@\n-const VERSION = '0.0.3';\n+import { ChatCompletionRequest, ChatCompletionResponse, ChatCompletionResponseChunk, ChatRequestOptions, EmbeddingResponse, ListModelsResponse, MistralChatCompletionRequest } from './utils/type';\n+import { MistralAPIError } from './utils/api-error';\n+import { configuredFetch } from './utils/init-fetch';\n+import { combineSignals } from './utils/helper';\n+\n+const VERSION = '0.2.0';\n const RETRY_STATUS_CODES = [429, 500, 502, 503, 504];\n const ENDPOINT = 'https://api.mistral.ai';\n \n-// We can't use a top level await if eventually this is to be converted\n-// to typescript and compiled to commonjs, or similarly using babel.\n-const configuredFetch = Promise.resolve(\n-  globalThis.fetch ?? import('node-fetch').then((m) => m.default));\n-\n-/**\n- * MistralAPIError\n- * @return {MistralAPIError}\n- * @extends {Error}\n- */\n-class MistralAPIError extends Error {\n-  /**\n-   * A simple error class for Mistral API errors\n-   * @param {*} message\n-   */\n-  constructor(message) {\n-    super(message);\n-    this.name = 'MistralAPIError';\n-  }\n-};\n-\n-/**\n- * @param {Array<AbortSignal|undefined>} signals to merge\n- * @return {AbortSignal} signal which will abort when any of signals abort\n- */\n-function combineSignals(signals) {\n-  const controller = new AbortController();\n-  signals.forEach((signal) => {\n-    if (!signal) {\n-      return;\n-    }\n-\n-    signal.addEventListener('abort', () => {\n-      controller.abort(signal.reason);\n-    }, {once: true});\n-\n-    if (signal.aborted) {\n-      controller.abort(signal.reason);\n-    }\n-  });\n-\n-  return controller.signal;\n-}\n-\n /**\n  * MistralClient\n  * @return {MistralClient}\n  */\n-class MistralClient {\n-  /**\n-   * A simple and lightweight client for the Mistral API\n-   * @param {*} apiKey can be set as an environment variable MISTRAL_API_KEY,\n-   * or provided in this parameter\n-   * @param {*} endpoint defaults to https://api.mistral.ai\n-   * @param {*} maxRetries defaults to 5\n-   * @param {*} timeout defaults to 120 seconds\n-   */\n-  constructor(\n-    apiKey = process.env.MISTRAL_API_KEY,\n-    endpoint = ENDPOINT,\n-    maxRetries = 5,\n-    timeout = 120,\n-  ) {\n-    this.endpoint = endpoint;\n-    this.apiKey = apiKey;\n+export default class MistralClient {\n+  private apiKey: string;\n+  private endpoint: string;\n+  private maxRetries: number;\n+  private timeout: number;\n+  private modelDefault?: string;\n+\n \n+  constructor(apiKey = process.env.MISTRAL_API_KEY!, endpoint = ENDPOINT, maxRetries = 5, timeout = 120) {\n+    this.apiKey = apiKey;\n+    this.endpoint = endpoint;\n     this.maxRetries = maxRetries;\n     this.timeout = timeout;\n-\n-    if (this.endpoint.indexOf('inference.azure.com')) {\n+    if (this.endpoint.includes('inference.azure.com')) {\n       this.modelDefault = 'mistral';\n     }\n   }\n \n   /**\n-   * @return {Promise}\n-   * @private\n-   * @param {...*} args - fetch args\n    * hook point for non-global fetch override\n+   * @param input \n+   * @param init \n+   * @returns \n    */\n-  async _fetch(...args) {\n+  public async _fetch(input: string | Request, init?: RequestInit){\n     const fetchFunc = await configuredFetch;\n-    return fetchFunc(...args);\n+    return fetchFunc(input, init);\n   }\n \n   /**\n-   *\n-   * @param {*} method\n-   * @param {*} path\n-   * @param {*} request\n-   * @param {*} signal\n-   * @return {Promise<*>}\n+   * Creates a chat completion request\n+   * @param param0 \n+   * @returns {MistralChatCompletionRequest}\n+   */\n+  private _makeChatCompletionRequest({\n+    model,\n+    messages,\n+    tools,\n+    temperature,\n+    maxTokens,\n+    topP,\n+    randomSeed,\n+    stream,\n+    safeMode,\n+    safePrompt,\n+    toolChoice,\n+    responseFormat,\n+  }: any) {\n+    // if modelDefault and model are undefined, throw an error\n+    if (!model && !this.modelDefault) {\n+      throw new MistralAPIError('You must provide a model name');\n+    }\n+    return {\n+      model: model ?? this.modelDefault,\n+      messages: messages,\n+      tools: tools ?? undefined,\n+      temperature: temperature ?? undefined,\n+      max_tokens: maxTokens ?? undefined,\n+      top_p: topP ?? undefined,\n+      random_seed: randomSeed ?? undefined,\n+      stream: stream ?? undefined,\n+      safe_prompt: (safeMode || safePrompt) ?? undefined,\n+      tool_choice: toolChoice ?? undefined,\n+      response_format: responseFormat ?? undefined,\n+    } as MistralChatCompletionRequest;\n+  }\n+\n+  /**\n+   * \n+   * @param method \n+   * @param path \n+   * @param request \n+   * @param signal \n+   * @returns \n    */\n-  _request = async function(method, path, request, signal) {\n+  private async _request(method: string, path: string, request?: any, signal?:AbortSignal): Promise<any> {\n     const url = `${this.endpoint}/${path}`;\n-    const options = {\n-      method: method,\n+    const options: RequestInit = {\n+      method,\n       headers: {\n         'User-Agent': `mistral-client-js/${VERSION}`,\n-        'Accept': request?.stream ? 'text/event-stream' : 'application/json',\n+        Accept: request?.stream ? 'text/event-stream' : 'application/json',\n         'Content-Type': 'application/json',\n-        'Authorization': `Bearer ${this.apiKey}`,\n+        Authorization: `Bearer ${this.apiKey}`,\n       },\n       body: method !== 'get' ? JSON.stringify(request) : null,\n-      signal: combineSignals(\n-        [AbortSignal.timeout(this.timeout * 1000), signal]),\n+      signal: signal? combineSignals([AbortSignal.timeout(this.timeout * 1000), signal]): AbortSignal.timeout(this.timeout * 1000),\n     };\n \n     for (let attempts = 0; attempts < this.maxRetries; attempts++) {\n       try {\n         const response = await this._fetch(url, options);\n-\n         if (response.ok) {\n           if (request?.stream) {\n             // When using node-fetch or test mocks, getReader is not defined\n-            if (typeof response.body.getReader === 'undefined') {\n+            if (typeof response.body!.getReader === 'undefined') {\n               return response.body;\n-            } else {\n-              const reader = response.body.getReader();\n+            }else {",
        "path": "src/mistral-client.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "5b7ea12daf5541d721f4368e2f68157a03e5efc0",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Looks like formatting needs running? `}els {`",
        "created_at": "2024-05-14T10:35:18Z",
        "updated_at": "2024-05-14T10:35:18Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1599787778",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599787778"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1599787778"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599787778/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 111,
        "side": "RIGHT",
        "original_position": 197,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599789577",
        "pull_request_review_id": 2054960684,
        "id": 1599789577,
        "node_id": "PRRC_kwDOK23oNM5fWtoJ",
        "diff_hunk": "@@ -142,95 +131,27 @@ class MistralClient {\n           }\n           return await response.json();\n         } else if (RETRY_STATUS_CODES.includes(response.status)) {\n-          console.debug(\n-            `Retrying request on response status: ${response.status}`,\n-            `Response: ${await response.text()}`,\n-            `Attempt: ${attempts + 1}`,\n-          );\n-          // eslint-disable-next-line max-len\n-          await new Promise((resolve) =>\n-            setTimeout(resolve, Math.pow(2, (attempts + 1)) * 500),\n-          );\n+          console.debug(`Retrying request on response status: ${response.status}`);",
        "path": "src/mistral-client.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "5b7ea12daf5541d721f4368e2f68157a03e5efc0",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "You've dropped some of the text here:\r\n\"\"\"\r\n            `Response: ${await response.text()}`,\r\n            `Attempt: ${attempts + 1}`,\r\n\"\"\"",
        "created_at": "2024-05-14T10:36:57Z",
        "updated_at": "2024-05-14T10:36:57Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1599789577",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599789577"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1599789577"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599789577/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 134,
        "side": "RIGHT",
        "original_position": 222,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599882929",
        "pull_request_review_id": 2055118542,
        "id": 1599882929,
        "node_id": "PRRC_kwDOK23oNM5fXEax",
        "diff_hunk": "@@ -1,132 +1,121 @@\n-const VERSION = '0.0.3';\n+import { ChatCompletionRequest, ChatCompletionResponse, ChatCompletionResponseChunk, ChatRequestOptions, EmbeddingResponse, ListModelsResponse, MistralChatCompletionRequest } from './utils/type';\n+import { MistralAPIError } from './utils/api-error';\n+import { configuredFetch } from './utils/init-fetch';\n+import { combineSignals } from './utils/helper';\n+\n+const VERSION = '0.2.0';\n const RETRY_STATUS_CODES = [429, 500, 502, 503, 504];\n const ENDPOINT = 'https://api.mistral.ai';\n \n-// We can't use a top level await if eventually this is to be converted\n-// to typescript and compiled to commonjs, or similarly using babel.\n-const configuredFetch = Promise.resolve(\n-  globalThis.fetch ?? import('node-fetch').then((m) => m.default));\n-\n-/**\n- * MistralAPIError\n- * @return {MistralAPIError}\n- * @extends {Error}\n- */\n-class MistralAPIError extends Error {\n-  /**\n-   * A simple error class for Mistral API errors\n-   * @param {*} message\n-   */\n-  constructor(message) {\n-    super(message);\n-    this.name = 'MistralAPIError';\n-  }\n-};\n-\n-/**\n- * @param {Array<AbortSignal|undefined>} signals to merge\n- * @return {AbortSignal} signal which will abort when any of signals abort\n- */\n-function combineSignals(signals) {\n-  const controller = new AbortController();\n-  signals.forEach((signal) => {\n-    if (!signal) {\n-      return;\n-    }\n-\n-    signal.addEventListener('abort', () => {\n-      controller.abort(signal.reason);\n-    }, {once: true});\n-\n-    if (signal.aborted) {\n-      controller.abort(signal.reason);\n-    }\n-  });\n-\n-  return controller.signal;\n-}\n-\n /**\n  * MistralClient\n  * @return {MistralClient}\n  */\n-class MistralClient {\n-  /**\n-   * A simple and lightweight client for the Mistral API\n-   * @param {*} apiKey can be set as an environment variable MISTRAL_API_KEY,\n-   * or provided in this parameter\n-   * @param {*} endpoint defaults to https://api.mistral.ai\n-   * @param {*} maxRetries defaults to 5\n-   * @param {*} timeout defaults to 120 seconds\n-   */\n-  constructor(\n-    apiKey = process.env.MISTRAL_API_KEY,\n-    endpoint = ENDPOINT,\n-    maxRetries = 5,\n-    timeout = 120,\n-  ) {\n-    this.endpoint = endpoint;\n-    this.apiKey = apiKey;\n+export default class MistralClient {\n+  private apiKey: string;\n+  private endpoint: string;\n+  private maxRetries: number;\n+  private timeout: number;\n+  private modelDefault?: string;\n+\n \n+  constructor(apiKey = process.env.MISTRAL_API_KEY!, endpoint = ENDPOINT, maxRetries = 5, timeout = 120) {\n+    this.apiKey = apiKey;\n+    this.endpoint = endpoint;\n     this.maxRetries = maxRetries;\n     this.timeout = timeout;\n-\n-    if (this.endpoint.indexOf('inference.azure.com')) {\n+    if (this.endpoint.includes('inference.azure.com')) {\n       this.modelDefault = 'mistral';\n     }\n   }\n \n   /**\n-   * @return {Promise}\n-   * @private\n-   * @param {...*} args - fetch args\n    * hook point for non-global fetch override\n+   * @param input \n+   * @param init \n+   * @returns \n    */\n-  async _fetch(...args) {\n+  public async _fetch(input: string | Request, init?: RequestInit){\n     const fetchFunc = await configuredFetch;\n-    return fetchFunc(...args);\n+    return fetchFunc(input, init);\n   }\n \n   /**\n-   *\n-   * @param {*} method\n-   * @param {*} path\n-   * @param {*} request\n-   * @param {*} signal\n-   * @return {Promise<*>}\n+   * Creates a chat completion request\n+   * @param param0 \n+   * @returns {MistralChatCompletionRequest}\n+   */\n+  private _makeChatCompletionRequest({\n+    model,\n+    messages,\n+    tools,\n+    temperature,\n+    maxTokens,\n+    topP,\n+    randomSeed,\n+    stream,\n+    safeMode,\n+    safePrompt,\n+    toolChoice,\n+    responseFormat,\n+  }: any) {\n+    // if modelDefault and model are undefined, throw an error\n+    if (!model && !this.modelDefault) {\n+      throw new MistralAPIError('You must provide a model name');\n+    }\n+    return {\n+      model: model ?? this.modelDefault,\n+      messages: messages,\n+      tools: tools ?? undefined,\n+      temperature: temperature ?? undefined,\n+      max_tokens: maxTokens ?? undefined,\n+      top_p: topP ?? undefined,\n+      random_seed: randomSeed ?? undefined,\n+      stream: stream ?? undefined,\n+      safe_prompt: (safeMode || safePrompt) ?? undefined,\n+      tool_choice: toolChoice ?? undefined,\n+      response_format: responseFormat ?? undefined,\n+    } as MistralChatCompletionRequest;\n+  }\n+\n+  /**\n+   * \n+   * @param method \n+   * @param path \n+   * @param request \n+   * @param signal \n+   * @returns \n    */\n-  _request = async function(method, path, request, signal) {\n+  private async _request(method: string, path: string, request?: any, signal?:AbortSignal): Promise<any> {\n     const url = `${this.endpoint}/${path}`;\n-    const options = {\n-      method: method,\n+    const options: RequestInit = {\n+      method,\n       headers: {\n         'User-Agent': `mistral-client-js/${VERSION}`,\n-        'Accept': request?.stream ? 'text/event-stream' : 'application/json',\n+        Accept: request?.stream ? 'text/event-stream' : 'application/json',\n         'Content-Type': 'application/json',\n-        'Authorization': `Bearer ${this.apiKey}`,\n+        Authorization: `Bearer ${this.apiKey}`,\n       },\n       body: method !== 'get' ? JSON.stringify(request) : null,\n-      signal: combineSignals(\n-        [AbortSignal.timeout(this.timeout * 1000), signal]),\n+      signal: signal? combineSignals([AbortSignal.timeout(this.timeout * 1000), signal]): AbortSignal.timeout(this.timeout * 1000),\n     };\n \n     for (let attempts = 0; attempts < this.maxRetries; attempts++) {\n       try {\n         const response = await this._fetch(url, options);\n-\n         if (response.ok) {\n           if (request?.stream) {\n             // When using node-fetch or test mocks, getReader is not defined\n-            if (typeof response.body.getReader === 'undefined') {\n+            if (typeof response.body!.getReader === 'undefined') {\n               return response.body;\n-            } else {\n-              const reader = response.body.getReader();\n+            }else {",
        "path": "src/mistral-client.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "5b7ea12daf5541d721f4368e2f68157a03e5efc0",
        "user": {
          "login": "JamieLee0510",
          "id": 43312730,
          "node_id": "MDQ6VXNlcjQzMzEyNzMw",
          "avatar_url": "https://avatars.githubusercontent.com/u/43312730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JamieLee0510",
          "html_url": "https://github.com/JamieLee0510",
          "followers_url": "https://api.github.com/users/JamieLee0510/followers",
          "following_url": "https://api.github.com/users/JamieLee0510/following{/other_user}",
          "gists_url": "https://api.github.com/users/JamieLee0510/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/JamieLee0510/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/JamieLee0510/subscriptions",
          "organizations_url": "https://api.github.com/users/JamieLee0510/orgs",
          "repos_url": "https://api.github.com/users/JamieLee0510/repos",
          "events_url": "https://api.github.com/users/JamieLee0510/events{/privacy}",
          "received_events_url": "https://api.github.com/users/JamieLee0510/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "this one I think it might need something like `.prettierrc` config to align formatting afterwards. \r\nI have noticed that there was a pr related with single-quote.",
        "created_at": "2024-05-14T11:49:22Z",
        "updated_at": "2024-05-14T11:49:23Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1599882929",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "NONE",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599882929"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1599882929"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599882929/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 111,
        "side": "RIGHT",
        "in_reply_to_id": 1599787778,
        "original_position": 197,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599916595",
        "pull_request_review_id": 2055176538,
        "id": 1599916595,
        "node_id": "PRRC_kwDOK23oNM5fXMoz",
        "diff_hunk": "@@ -0,0 +1,27 @@\n+/**\n+ * \n+ * @param signals to merge\n+ * @returns signal which will abort when any of signals abort\n+ */\n+export function combineSignals(signals: AbortSignal[]):AbortSignal {\n+ const controller = new AbortController();\n+ signals.forEach((signal) => {\n+   if (!signal) {\n+     return;\n+   }\n+\n+   signal.addEventListener(\n+     'abort',\n+     () => {\n+       controller.abort(signal.reason);\n+     },\n+     {once: true},\n+   );\n+\n+   if (signal.aborted) {\n+     controller.abort(signal.reason);\n+   }\n+ });\n+\n+ return controller.signal;\n+}",
        "path": "src/utils/helper.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "24e6edf7f92ba6ef2881c27cc00792c75317cbdf",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Seem it wants you to add an extra line at the end",
        "created_at": "2024-05-14T12:15:02Z",
        "updated_at": "2024-05-14T12:15:03Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1599916595",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599916595"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1599916595"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599916595/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 27,
        "side": "RIGHT",
        "original_position": 27,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599918941",
        "pull_request_review_id": 2055181551,
        "id": 1599918941,
        "node_id": "PRRC_kwDOK23oNM5fXNNd",
        "diff_hunk": "@@ -1,12 +1,20 @@\n-import jest from 'jest-mock';\n+import { jest } from '@jest/globals';\n+import { ChatCompletionResponse, Embedding, EmbeddingResponse, ListModelsResponse } from \"@mistralai/mistralai/utils/type\"",
        "path": "tests/test-utils.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "24e6edf7f92ba6ef2881c27cc00792c75317cbdf",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Somehow surprised that import works ",
        "created_at": "2024-05-14T12:16:39Z",
        "updated_at": "2024-05-14T12:16:39Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1599918941",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599918941"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1599918941"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599918941/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 2,
        "side": "RIGHT",
        "original_position": 3,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599932525",
        "pull_request_review_id": 2055198668,
        "id": 1599932525,
        "node_id": "PRRC_kwDOK23oNM5fXQht",
        "diff_hunk": "@@ -173,83 +167,91 @@ export function mockChatResponsePayload() {\n       },\n     ],\n     model: 'mistral-small',\n-    usage: {prompt_tokens: 90, total_tokens: 90, completion_tokens: 0},\n+    usage: { prompt_tokens: 90, total_tokens: 90, completion_tokens: 0 },\n   };\n }\n \n-/**\n- * Mock chat completion stream\n- * @return {Object}\n- */\n-export function mockChatResponseStreamingPayload() {\n+export function mockChatResponseStreamingPayload(): Uint8Array[] {\n   const encoder = new TextEncoder();\n-  const firstMessage =\n-    [encoder.encode('data: ' +\n-    JSON.stringify({\n-      id: 'cmpl-8cd9019d21ba490aa6b9740f5d0a883e',\n-      model: 'mistral-small',\n-      choices: [\n-        {\n-          index: 0,\n-          delta: {role: 'assistant'},\n-          finish_reason: null,\n-        },\n-      ],\n-    }) +\n-    '\\n\\n')];\n-  const lastMessage = [encoder.encode('data: [DONE]\\n\\n')];\n \n-  const dataMessages = [];\n-  for (let i = 0; i < 10; i++) {\n-    dataMessages.push(encoder.encode(\n+  // Initial message\n+  const firstMessage: Uint8Array[] = [\n+    encoder.encode(\n       'data: ' +\n         JSON.stringify({\n           id: 'cmpl-8cd9019d21ba490aa6b9740f5d0a883e',\n-          object: 'chat.completion.chunk',\n-          created: 1703168544,\n           model: 'mistral-small',\n           choices: [\n             {\n-              index: i,\n-              delta: {content: `stream response ${i}`},\n+              index: 0,\n+              delta: { role: 'assistant' },\n               finish_reason: null,\n             },\n           ],\n         }) +\n-        '\\n\\n'),\n+        '\\n\\n',\n+    ),\n+  ];\n+\n+  // Final message\n+  const lastMessage: Uint8Array[] = [encoder.encode('data: [DONE]\\n\\n')];\n+\n+  // Streamed data messages\n+  const dataMessages: Uint8Array[] = [];\n+  for (let i = 0; i < 10; i++) {\n+    dataMessages.push(\n+      encoder.encode(\n+        'data: ' +\n+          JSON.stringify({\n+            id: 'cmpl-8cd9019d21ba490aa6b9740f5d0a883e',\n+            object: 'chat.completion.chunk',\n+            created: 1703168544,\n+            model: 'mistral-small',\n+            choices: [\n+              {\n+                index: i,\n+                delta: { content: `stream response ${i}` },\n+                finish_reason: null,\n+              },\n+            ],\n+          }) +\n+          '\\n\\n',\n+      ),\n     );\n   }\n \n+  // Combine first, data, and last messages\n   return firstMessage.concat(dataMessages).concat(lastMessage);\n }\n \n /**\n  * Mock embeddings response\n- * @param {number} batchSize\n- * @return {Object}\n+ * @param batchSize number of embeddings to generate\n+ * @returns EmbeddingResponsePayload",
        "path": "tests/test-utils.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "24e6edf7f92ba6ef2881c27cc00792c75317cbdf",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "The linter isn't crying about returns (vs return)? I guess not. I thought I recalled it doing so for me.",
        "created_at": "2024-05-14T12:22:15Z",
        "updated_at": "2024-05-14T12:22:15Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1599932525",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599932525"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1599932525"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599932525/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 230,
        "side": "RIGHT",
        "original_position": 175,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599933106",
        "pull_request_review_id": 2055199296,
        "id": 1599933106,
        "node_id": "PRRC_kwDOK23oNM5fXQqy",
        "diff_hunk": "@@ -173,83 +167,91 @@ export function mockChatResponsePayload() {\n       },\n     ],\n     model: 'mistral-small',\n-    usage: {prompt_tokens: 90, total_tokens: 90, completion_tokens: 0},\n+    usage: { prompt_tokens: 90, total_tokens: 90, completion_tokens: 0 },\n   };\n }\n \n-/**\n- * Mock chat completion stream\n- * @return {Object}\n- */\n-export function mockChatResponseStreamingPayload() {\n+export function mockChatResponseStreamingPayload(): Uint8Array[] {\n   const encoder = new TextEncoder();\n-  const firstMessage =\n-    [encoder.encode('data: ' +\n-    JSON.stringify({\n-      id: 'cmpl-8cd9019d21ba490aa6b9740f5d0a883e',\n-      model: 'mistral-small',\n-      choices: [\n-        {\n-          index: 0,\n-          delta: {role: 'assistant'},\n-          finish_reason: null,\n-        },\n-      ],\n-    }) +\n-    '\\n\\n')];\n-  const lastMessage = [encoder.encode('data: [DONE]\\n\\n')];\n \n-  const dataMessages = [];\n-  for (let i = 0; i < 10; i++) {\n-    dataMessages.push(encoder.encode(\n+  // Initial message\n+  const firstMessage: Uint8Array[] = [\n+    encoder.encode(\n       'data: ' +\n         JSON.stringify({\n           id: 'cmpl-8cd9019d21ba490aa6b9740f5d0a883e',\n-          object: 'chat.completion.chunk',\n-          created: 1703168544,\n           model: 'mistral-small',\n           choices: [\n             {\n-              index: i,\n-              delta: {content: `stream response ${i}`},\n+              index: 0,\n+              delta: { role: 'assistant' },\n               finish_reason: null,\n             },\n           ],\n         }) +\n-        '\\n\\n'),\n+        '\\n\\n',\n+    ),\n+  ];\n+\n+  // Final message\n+  const lastMessage: Uint8Array[] = [encoder.encode('data: [DONE]\\n\\n')];\n+\n+  // Streamed data messages\n+  const dataMessages: Uint8Array[] = [];\n+  for (let i = 0; i < 10; i++) {\n+    dataMessages.push(\n+      encoder.encode(\n+        'data: ' +\n+          JSON.stringify({\n+            id: 'cmpl-8cd9019d21ba490aa6b9740f5d0a883e',\n+            object: 'chat.completion.chunk',\n+            created: 1703168544,\n+            model: 'mistral-small',\n+            choices: [\n+              {\n+                index: i,\n+                delta: { content: `stream response ${i}` },\n+                finish_reason: null,\n+              },\n+            ],\n+          }) +\n+          '\\n\\n',\n+      ),\n     );\n   }\n \n+  // Combine first, data, and last messages\n   return firstMessage.concat(dataMessages).concat(lastMessage);\n }\n \n /**\n  * Mock embeddings response\n- * @param {number} batchSize\n- * @return {Object}\n+ * @param batchSize number of embeddings to generate\n+ * @returns EmbeddingResponsePayload\n  */\n-export function mockEmbeddingResponsePayload(batchSize = 1) {\n+export function mockEmbeddingResponsePayload(batchSize: number = 1): EmbeddingResponse {\n+  const data: Embedding[] = [];\n+\n+  // Create 'batchSize' copies of the embedding object\n+  for (let i = 0; i < batchSize; i++) {\n+    data.push({\n+      id:i.toString(),\n+      object: 'embedding',\n+      embedding: [-0.018585205078125, 0.027099609375, 0.02587890625],\n+    });\n+  }\n+\n   return {\n     id: 'embd-98c8c60e3fbf4fc49658eddaf447357c',\n     object: 'list',\n-    data:\n-      [\n-        {\n-          object: 'embedding',\n-          embedding: [-0.018585205078125, 0.027099609375, 0.02587890625],\n-          index: 0,\n-        },\n-      ] * batchSize,\n+    data: data,\n     model: 'mistral-embed',\n     usage: {prompt_tokens: 90, total_tokens: 90, completion_tokens: 0},\n   };\n }\n \n-/**\n- * Mock embeddings request payload\n- * @return {Object}\n- */\n-export function mockEmbeddingRequest() {\n+// TODO:",
        "path": "tests/test-utils.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "24e6edf7f92ba6ef2881c27cc00792c75317cbdf",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Undone TODO",
        "created_at": "2024-05-14T12:22:32Z",
        "updated_at": "2024-05-14T12:22:33Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1599933106",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599933106"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1599933106"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599933106/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 254,
        "original_line": 253,
        "side": "RIGHT",
        "original_position": 212,
        "position": 171,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599934313",
        "pull_request_review_id": 2055201174,
        "id": 1599934313,
        "node_id": "PRRC_kwDOK23oNM5fXQ9p",
        "diff_hunk": "@@ -0,0 +1,22 @@\n+{\n+    \"compilerOptions\": {\n+      \"downlevelIteration\": true,\n+      \"lib\": [\"DOM\",\"es2022\"],\n+      \"module\": \"commonjs\",\n+      \"moduleResolution\": \"node\",\n+      \"noEmit\": true,\n+      \"noImplicitAny\": true,\n+      \"removeComments\": true,\n+      \"skipLibCheck\": true,\n+      \"strict\": true,\n+      \"target\": \"ES2022\",\n+      \"outDir\": \"dist\",\n+      \"baseUrl\": \"./\",\n+      \"paths\": {\n+        \"@mistralai/mistralai/*\": [\"src/*\"],",
        "path": "tsconfig.json",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "24e6edf7f92ba6ef2881c27cc00792c75317cbdf",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "That's how that import worked!",
        "created_at": "2024-05-14T12:23:02Z",
        "updated_at": "2024-05-14T12:23:02Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1599934313",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599934313"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1599934313"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599934313/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 16,
        "original_line": 16,
        "side": "RIGHT",
        "original_position": 16,
        "position": 16,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599937884",
        "pull_request_review_id": 2055206487,
        "id": 1599937884,
        "node_id": "PRRC_kwDOK23oNM5fXR1c",
        "diff_hunk": "@@ -1,132 +1,121 @@\n-const VERSION = '0.0.3';",
        "path": "src/mistral-client.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "24e6edf7f92ba6ef2881c27cc00792c75317cbdf",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Ideally this PR would be based on top of the latest commit in main. It doesn't seem to be, given VERSION of 0.0.3 ?",
        "created_at": "2024-05-14T12:25:13Z",
        "updated_at": "2024-05-14T12:25:13Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1599937884",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599937884"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1599937884"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599937884/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 1,
        "side": "LEFT",
        "original_position": 1,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599942698",
        "pull_request_review_id": 2055214563,
        "id": 1599942698,
        "node_id": "PRRC_kwDOK23oNM5fXTAq",
        "diff_hunk": "@@ -0,0 +1,27 @@\n+/**\n+ * \n+ * @param signals to merge\n+ * @returns signal which will abort when any of signals abort\n+ */\n+export function combineSignals(signals: AbortSignal[]):AbortSignal {\n+ const controller = new AbortController();\n+ signals.forEach((signal) => {\n+   if (!signal) {",
        "path": "src/utils/helper.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "24e6edf7f92ba6ef2881c27cc00792c75317cbdf",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "oh, yeah, it was taking an array of AbortSignal | undefined",
        "created_at": "2024-05-14T12:28:55Z",
        "updated_at": "2024-05-14T12:28:55Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1599942698",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599942698"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1599942698"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1599942698/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 9,
        "side": "RIGHT",
        "original_position": 9,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1600035380",
        "pull_request_review_id": 2055366911,
        "id": 1600035380,
        "node_id": "PRRC_kwDOK23oNM5fXpo0",
        "diff_hunk": "@@ -1,132 +1,121 @@\n-const VERSION = '0.0.3';",
        "path": "src/mistral-client.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "24e6edf7f92ba6ef2881c27cc00792c75317cbdf",
        "user": {
          "login": "JamieLee0510",
          "id": 43312730,
          "node_id": "MDQ6VXNlcjQzMzEyNzMw",
          "avatar_url": "https://avatars.githubusercontent.com/u/43312730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JamieLee0510",
          "html_url": "https://github.com/JamieLee0510",
          "followers_url": "https://api.github.com/users/JamieLee0510/followers",
          "following_url": "https://api.github.com/users/JamieLee0510/following{/other_user}",
          "gists_url": "https://api.github.com/users/JamieLee0510/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/JamieLee0510/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/JamieLee0510/subscriptions",
          "organizations_url": "https://api.github.com/users/JamieLee0510/orgs",
          "repos_url": "https://api.github.com/users/JamieLee0510/repos",
          "events_url": "https://api.github.com/users/JamieLee0510/events{/privacy}",
          "received_events_url": "https://api.github.com/users/JamieLee0510/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "but it is set `0.2.0` in latest commit in main branch:\r\nhttps://github.com/mistralai/client-js/blob/2fcc56418b11293b23c244b02dd1fce70695405d/src/client.js#L1\r\n\r\nor anything I misunderstand?",
        "created_at": "2024-05-14T13:21:52Z",
        "updated_at": "2024-05-14T13:21:52Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1600035380",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "NONE",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1600035380"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1600035380"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1600035380/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 1,
        "side": "LEFT",
        "in_reply_to_id": 1599937884,
        "original_position": 1,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1601394319",
        "pull_request_review_id": 2057598598,
        "id": 1601394319,
        "node_id": "PRRC_kwDOK23oNM5fc1aP",
        "diff_hunk": "@@ -1,132 +1,121 @@\n-const VERSION = '0.0.3';",
        "path": "src/mistral-client.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "24e6edf7f92ba6ef2881c27cc00792c75317cbdf",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Right, when looking at the diff for this PR we are seeing 0.0.3 \r\nThat's because this branch is commits based on an old version of main\r\nIt complicates review a little bit",
        "created_at": "2024-05-15T10:39:24Z",
        "updated_at": "2024-05-15T10:39:24Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1601394319",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1601394319"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1601394319"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1601394319/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 1,
        "side": "LEFT",
        "in_reply_to_id": 1599937884,
        "original_position": 1,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1601397239",
        "pull_request_review_id": 2057603333,
        "id": 1601397239,
        "node_id": "PRRC_kwDOK23oNM5fc2H3",
        "diff_hunk": "@@ -147,90 +136,26 @@ class MistralClient {\n             `Response: ${await response.text()}`,\n             `Attempt: ${attempts + 1}`,\n           );\n-          // eslint-disable-next-line max-len\n-          await new Promise((resolve) =>\n-            setTimeout(resolve, Math.pow(2, (attempts + 1)) * 500),\n-          );\n+          await new Promise((resolve) => setTimeout(resolve, Math.pow(2, attempts + 1) * 500));\n         } else {\n-          throw new MistralAPIError(\n-            `HTTP error! status: ${response.status} ` +\n-            `Response: \\n${await response.text()}`,\n-          );\n+          throw new MistralAPIError(`HTTP error! status: ${response.status}`);",
        "path": "src/mistral-client.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "24e6edf7f92ba6ef2881c27cc00792c75317cbdf",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "You're missing `Response: \\n${await response.text()}` from the og",
        "created_at": "2024-05-15T10:41:51Z",
        "updated_at": "2024-05-15T10:41:51Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1601397239",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1601397239"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1601397239"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1601397239/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 141,
        "side": "RIGHT",
        "original_position": 222,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1601398950",
        "pull_request_review_id": 2057606136,
        "id": 1601398950,
        "node_id": "PRRC_kwDOK23oNM5fc2im",
        "diff_hunk": "@@ -147,90 +136,26 @@ class MistralClient {\n             `Response: ${await response.text()}`,\n             `Attempt: ${attempts + 1}`,\n           );\n-          // eslint-disable-next-line max-len\n-          await new Promise((resolve) =>\n-            setTimeout(resolve, Math.pow(2, (attempts + 1)) * 500),\n-          );\n+          await new Promise((resolve) => setTimeout(resolve, Math.pow(2, attempts + 1) * 500));\n         } else {\n-          throw new MistralAPIError(\n-            `HTTP error! status: ${response.status} ` +\n-            `Response: \\n${await response.text()}`,\n-          );\n+          throw new MistralAPIError(`HTTP error! status: ${response.status}`);\n         }\n-      } catch (error) {\n+      } catch (error: any) {\n         console.error(`Request failed: ${error.message}`);\n-        if (error.name === 'MistralAPIError') {\n-          throw error;\n-        }\n         if (attempts === this.maxRetries - 1) throw error;\n-        // eslint-disable-next-line max-len\n-        await new Promise((resolve) =>\n-          setTimeout(resolve, Math.pow(2, (attempts + 1)) * 500),\n-        );\n+        await new Promise((resolve) => setTimeout(resolve, Math.pow(2, attempts + 1) * 500));\n       }\n     }\n     throw new Error('Max retries reached');\n-  };\n-\n-  /**\n-   * Creates a chat completion request\n-   * @param {*} model\n-   * @param {*} messages\n-   * @param {*} tools\n-   * @param {*} temperature\n-   * @param {*} maxTokens\n-   * @param {*} topP\n-   * @param {*} randomSeed\n-   * @param {*} stream\n-   * @param {*} safeMode deprecated use safePrompt instead\n-   * @param {*} safePrompt\n-   * @param {*} toolChoice\n-   * @param {*} responseFormat\n-   * @return {Promise<Object>}\n-   */\n-  _makeChatCompletionRequest = function(\n-    model,\n-    messages,\n-    tools,\n-    temperature,\n-    maxTokens,\n-    topP,\n-    randomSeed,\n-    stream,\n-    safeMode,\n-    safePrompt,\n-    toolChoice,\n-    responseFormat,\n-  ) {\n-    // if modelDefault and model are undefined, throw an error\n-    if (!model && !this.modelDefault) {\n-      throw new MistralAPIError(\n-        'You must provide a model name',\n-      );\n-    }\n-    return {\n-      model: model ?? this.modelDefault,\n-      messages: messages,\n-      tools: tools ?? undefined,\n-      temperature: temperature ?? undefined,\n-      max_tokens: maxTokens ?? undefined,\n-      top_p: topP ?? undefined,\n-      random_seed: randomSeed ?? undefined,\n-      stream: stream ?? undefined,\n-      safe_prompt: (safeMode || safePrompt) ?? undefined,\n-      tool_choice: toolChoice ?? undefined,\n-      response_format: responseFormat ?? undefined,\n-    };\n-  };\n+  }\n \n   /**\n    * Returns a list of the available models\n-   * @return {Promise<Object>}\n+   * @returns ",
        "path": "src/mistral-client.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "24e6edf7f92ba6ef2881c27cc00792c75317cbdf",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "consistent return vs returns?\r\n\r\nPersonally I would just lose the JSDoc now that it's typescript ",
        "created_at": "2024-05-15T10:43:24Z",
        "updated_at": "2024-05-15T10:43:24Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1601398950",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1601398950"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1601398950"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1601398950/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 154,
        "side": "RIGHT",
        "original_position": 296,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1602743049",
        "pull_request_review_id": 2059792085,
        "id": 1602743049,
        "node_id": "PRRC_kwDOK23oNM5fh-sJ",
        "diff_hunk": "@@ -147,90 +136,26 @@ class MistralClient {\n             `Response: ${await response.text()}`,\n             `Attempt: ${attempts + 1}`,\n           );\n-          // eslint-disable-next-line max-len\n-          await new Promise((resolve) =>\n-            setTimeout(resolve, Math.pow(2, (attempts + 1)) * 500),\n-          );\n+          await new Promise((resolve) => setTimeout(resolve, Math.pow(2, attempts + 1) * 500));\n         } else {\n-          throw new MistralAPIError(\n-            `HTTP error! status: ${response.status} ` +\n-            `Response: \\n${await response.text()}`,\n-          );\n+          throw new MistralAPIError(`HTTP error! status: ${response.status}`);\n         }\n-      } catch (error) {\n+      } catch (error: any) {\n         console.error(`Request failed: ${error.message}`);\n-        if (error.name === 'MistralAPIError') {\n-          throw error;\n-        }\n         if (attempts === this.maxRetries - 1) throw error;\n-        // eslint-disable-next-line max-len\n-        await new Promise((resolve) =>\n-          setTimeout(resolve, Math.pow(2, (attempts + 1)) * 500),\n-        );\n+        await new Promise((resolve) => setTimeout(resolve, Math.pow(2, attempts + 1) * 500));\n       }\n     }\n     throw new Error('Max retries reached');\n-  };\n-\n-  /**\n-   * Creates a chat completion request\n-   * @param {*} model\n-   * @param {*} messages\n-   * @param {*} tools\n-   * @param {*} temperature\n-   * @param {*} maxTokens\n-   * @param {*} topP\n-   * @param {*} randomSeed\n-   * @param {*} stream\n-   * @param {*} safeMode deprecated use safePrompt instead\n-   * @param {*} safePrompt\n-   * @param {*} toolChoice\n-   * @param {*} responseFormat\n-   * @return {Promise<Object>}\n-   */\n-  _makeChatCompletionRequest = function(\n-    model,\n-    messages,\n-    tools,\n-    temperature,\n-    maxTokens,\n-    topP,\n-    randomSeed,\n-    stream,\n-    safeMode,\n-    safePrompt,\n-    toolChoice,\n-    responseFormat,\n-  ) {\n-    // if modelDefault and model are undefined, throw an error\n-    if (!model && !this.modelDefault) {\n-      throw new MistralAPIError(\n-        'You must provide a model name',\n-      );\n-    }\n-    return {\n-      model: model ?? this.modelDefault,\n-      messages: messages,\n-      tools: tools ?? undefined,\n-      temperature: temperature ?? undefined,\n-      max_tokens: maxTokens ?? undefined,\n-      top_p: topP ?? undefined,\n-      random_seed: randomSeed ?? undefined,\n-      stream: stream ?? undefined,\n-      safe_prompt: (safeMode || safePrompt) ?? undefined,\n-      tool_choice: toolChoice ?? undefined,\n-      response_format: responseFormat ?? undefined,\n-    };\n-  };\n+  }\n \n   /**\n    * Returns a list of the available models\n-   * @return {Promise<Object>}\n+   * @returns ",
        "path": "src/mistral-client.ts",
        "commit_id": "b4869316eb35ce2e6b17326aac5cf38eefce676e",
        "original_commit_id": "24e6edf7f92ba6ef2881c27cc00792c75317cbdf",
        "user": {
          "login": "JamieLee0510",
          "id": 43312730,
          "node_id": "MDQ6VXNlcjQzMzEyNzMw",
          "avatar_url": "https://avatars.githubusercontent.com/u/43312730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JamieLee0510",
          "html_url": "https://github.com/JamieLee0510",
          "followers_url": "https://api.github.com/users/JamieLee0510/followers",
          "following_url": "https://api.github.com/users/JamieLee0510/following{/other_user}",
          "gists_url": "https://api.github.com/users/JamieLee0510/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/JamieLee0510/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/JamieLee0510/subscriptions",
          "organizations_url": "https://api.github.com/users/JamieLee0510/orgs",
          "repos_url": "https://api.github.com/users/JamieLee0510/repos",
          "events_url": "https://api.github.com/users/JamieLee0510/events{/privacy}",
          "received_events_url": "https://api.github.com/users/JamieLee0510/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "due to this discussion:\r\nhttps://github.com/mistralai/client-js/pull/73#discussion_r1598054622\r\n\r\nI agree with jsdoc making code more readable, but okay with both.",
        "created_at": "2024-05-16T07:14:28Z",
        "updated_at": "2024-05-16T07:14:28Z",
        "html_url": "https://github.com/mistralai/client-js/pull/73#discussion_r1602743049",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/73",
        "author_association": "NONE",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1602743049"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/73#discussion_r1602743049"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/73"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1602743049/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 154,
        "side": "RIGHT",
        "in_reply_to_id": 1601398950,
        "original_position": 296,
        "position": null,
        "subject_type": "line"
      }
    ]
  },
  "72": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2097268674",
        "html_url": "https://github.com/mistralai/client-js/pull/72#issuecomment-2097268674",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/72",
        "id": 2097268674,
        "node_id": "IC_kwDOK23oNM59AcfC",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-07T02:09:26Z",
        "updated_at": "2024-05-07T02:09:26Z",
        "author_association": "CONTRIBUTOR",
        "body": "@fuegoio\r\n\r\nPlease look :)",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2097268674/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2097669949",
        "html_url": "https://github.com/mistralai/client-js/pull/72#issuecomment-2097669949",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/72",
        "id": 2097669949,
        "node_id": "IC_kwDOK23oNM59B-c9",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-07T07:50:40Z",
        "updated_at": "2024-05-07T07:50:40Z",
        "author_association": "CONTRIBUTOR",
        "body": ">\n> I suppose someone put \"name\" in there for OpenAI compat reasons at some\npoint, though it is just misleading, and also not necessary\n\n>\n>> Message ID: ***@***.***>\n>>\n>\n",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2097669949/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2097694025",
        "html_url": "https://github.com/mistralai/client-js/pull/72#issuecomment-2097694025",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/72",
        "id": 2097694025,
        "node_id": "IC_kwDOK23oNM59CEVJ",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-07T08:04:30Z",
        "updated_at": "2024-05-07T08:04:30Z",
        "author_association": "CONTRIBUTOR",
        "body": "Oh right, yeah, the enums aren't even defined at runtime are they. I added\r\nliterals (for ergonomics) and left the enums in there and moved on. They\r\nare completely broken though aren't they.\r\n\r\nA good argument to move to TS :)\r\n\r\nOn Tue, 7 May 2024, 2:51\u202fpm Nicholas Dudfield, ***@***.***>\r\nwrote:\r\n\r\n> >\r\n> > I suppose someone put \"name\" in there for OpenAI compat reasons at some\r\n> point, though it is just misleading, and also not necessary\r\n>\r\n> >\r\n> >> Message ID: ***@***.***>\r\n> >>\r\n> >\r\n>\r\n> \u2014\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/mistralai/client-js/pull/72#issuecomment-2097669949>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AAEAHG6QYRPI5CS72RB4DX3ZBCBWLAVCNFSM6AAAAABHKCIQK6VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDAOJXGY3DSOJUHE>\r\n> .\r\n> You are receiving this because you are subscribed to this thread.Message\r\n> ID: ***@***.***>\r\n>\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2097694025/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2097702795",
        "html_url": "https://github.com/mistralai/client-js/pull/72#issuecomment-2097702795",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/72",
        "id": 2097702795,
        "node_id": "IC_kwDOK23oNM59CGeL",
        "user": {
          "login": "fuegoio",
          "id": 321778,
          "node_id": "MDQ6VXNlcjMyMTc3OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/321778?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fuegoio",
          "html_url": "https://github.com/fuegoio",
          "followers_url": "https://api.github.com/users/fuegoio/followers",
          "following_url": "https://api.github.com/users/fuegoio/following{/other_user}",
          "gists_url": "https://api.github.com/users/fuegoio/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fuegoio/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fuegoio/subscriptions",
          "organizations_url": "https://api.github.com/users/fuegoio/orgs",
          "repos_url": "https://api.github.com/users/fuegoio/repos",
          "events_url": "https://api.github.com/users/fuegoio/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fuegoio/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-07T08:09:09Z",
        "updated_at": "2024-05-07T08:09:09Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Oh right, yeah, the enums aren't even defined at runtime are they. I added literals (for ergonomics) and left the enums in there and moved on. They are completely broken though aren't they. A good argument to move to TS :)\r\n\r\nIn a `d.ts` file they do not make much sense no. I approve moving to TS to have this kind of nice feature.\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2097702795/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2097712162",
        "html_url": "https://github.com/mistralai/client-js/pull/72#issuecomment-2097712162",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/72",
        "id": 2097712162,
        "node_id": "IC_kwDOK23oNM59CIwi",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-07T08:14:05Z",
        "updated_at": "2024-05-07T08:14:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "@fuegoio \r\n\r\nAnything else? I'll look at a full TS port when I have more time",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2097712162/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2097719862",
        "html_url": "https://github.com/mistralai/client-js/pull/72#issuecomment-2097719862",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/72",
        "id": 2097719862,
        "node_id": "IC_kwDOK23oNM59CKo2",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-07T08:18:11Z",
        "updated_at": "2024-05-07T08:18:11Z",
        "author_association": "CONTRIBUTOR",
        "body": "Oh, wait, that's not working, enums still referenced, but no errors, hrmmm",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2097719862/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2097763670",
        "html_url": "https://github.com/mistralai/client-js/pull/72#issuecomment-2097763670",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/72",
        "id": 2097763670,
        "node_id": "IC_kwDOK23oNM59CVVW",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-07T08:41:36Z",
        "updated_at": "2024-05-07T12:55:26Z",
        "author_association": "CONTRIBUTOR",
        "body": ">  I'll look at a full TS port when I have more time\r\n\r\nIn a separate PR, to be clear\r\n\r\nedit: the question is if you all want to merge this ( I think it makes sense, as it's still progress, and closes some issues), or wait for a full TS port",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2097763670/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1591956063",
        "pull_request_review_id": 2042322511,
        "id": 1591956063,
        "node_id": "PRRC_kwDOK23oNM5e41Jf",
        "diff_hunk": "@@ -1,194 +1,177 @@\n-declare module '@mistralai/mistralai' {\n-    export interface ModelPermission {\n-        id: string;\n-        object: 'model_permission';\n-        created: number;\n-        allow_create_engine: boolean;\n-        allow_sampling: boolean;\n-        allow_logprobs: boolean;\n-        allow_search_indices: boolean;\n-        allow_view: boolean;\n-        allow_fine_tuning: boolean;\n-        organization: string;\n-        group: string | null;\n-        is_blocking: boolean;\n-    }\n-\n-    export interface Model {\n-        id: string;\n-        object: 'model';\n-        created: number;\n-        owned_by: string;\n-        root: string | null;\n-        parent: string | null;\n-        permission: ModelPermission[];\n-    }\n-\n-    export interface ListModelsResponse {\n-        object: 'list';\n-        data: Model[];\n-    }\n-\n-    export interface Function {\n-        name: string;\n-        description: string;\n-        parameters: object;\n-    }\n-\n-    export enum ToolType {\n-        function = 'function',\n-    }\n-\n-    export interface FunctionCall {\n-        name: string;\n-        arguments: string;\n-    }\n-\n-    export interface ToolCalls {\n-        id: 'null';\n-        type: ToolType = ToolType.function;\n-        function: FunctionCall;\n-    }\n-\n-    export enum ResponseFormats {\n-        text = 'text',\n-        json_object = 'json_object',\n-    }\n-\n-    export enum ToolChoice {\n-        auto = 'auto',\n-        any = 'any',\n-        none = 'none',\n-    }\n-\n-    export interface ResponseFormat {\n-        type: ResponseFormats = ResponseFormats.text;\n-    }\n-\n-    export interface TokenUsage {\n-        prompt_tokens: number;\n-        completion_tokens: number;\n-        total_tokens: number;\n-    }\n-\n-    export interface ChatCompletionResponseChoice {\n-        index: number;\n-        message: {\n-            role: string;\n-            content: string;\n-        };\n-        finish_reason: string;\n-    }\n-\n-    export interface ChatCompletionResponseChunkChoice {\n-        index: number;\n-        delta: {\n-            role?: string;\n-            content?: string;\n-            tool_calls?: ToolCalls[];\n-        };\n-        finish_reason: string;\n-    }\n-\n-    export interface ChatCompletionResponse {\n-        id: string;\n-        object: 'chat.completion';\n-        created: number;\n-        model: string;\n-        choices: ChatCompletionResponseChoice[];\n-        usage: TokenUsage;\n-    }\n-\n-    export interface ChatCompletionResponseChunk {\n-        id: string;\n-        object: 'chat.completion.chunk';\n-        created: number;\n-        model: string;\n-        choices: ChatCompletionResponseChunkChoice[];\n-    }\n-\n-    export interface Embedding {\n-        id: string;\n-        object: 'embedding';\n-        embedding: number[];\n-    }\n-\n-    export interface EmbeddingResponse {\n-        id: string;\n-        object: 'list';\n-        data: Embedding[];\n-        model: string;\n-        usage: TokenUsage;\n-    }\n-\n-    class MistralClient {\n-        constructor(apiKey?: string, endpoint?: string);\n-\n-        private _request(\n-            method: string,\n-            path: string,\n-            request: unknown\n-        ): Promise<unknown>;\n-\n-        private _makeChatCompletionRequest(\n-            model: string,\n-            messages: Array<{ role: string; name?: string, content: string | string[], tool_calls?: ToolCalls[]; }>,\n-            tools?: Array<{ type: string; function:Function; }>, \n-            temperature?: number,\n-            maxTokens?: number,\n-            topP?: number,\n-            randomSeed?: number,\n-            stream?: boolean,\n-            /**\n-             * @deprecated use safePrompt instead\n-             */\n-            safeMode?: boolean,\n-            safePrompt?: boolean,\n-            toolChoice?: ToolChoice,\n-            responseFormat?: ResponseFormat\n-        ): object;\n-\n-        listModels(): Promise<ListModelsResponse>;\n-\n-        chat(options: {\n-            model: string;\n-            messages: Array<{ role: string; name?: string, content: string | string[], tool_calls?: ToolCalls[]; }>;\n-            tools?: Array<{ type: string; function:Function; }>; \n-            temperature?: number;\n-            maxTokens?: number;\n-            topP?: number;\n-            randomSeed?: number;\n-            /**\n-             * @deprecated use safePrompt instead\n-             */\n-            safeMode?: boolean;\n-            safePrompt?: boolean;\n-            toolChoice?: ToolChoice;\n-            responseFormat?: ResponseFormat; \n-        }): Promise<ChatCompletionResponse>;\n-\n-        chatStream(options: {\n-            model: string;\n-            messages: Array<{ role: string; name?: string, content: string | string[], tool_calls?: ToolCalls[]; }>;\n-            tools?: Array<{ type: string; function:Function; }>;\n-            temperature?: number;\n-            maxTokens?: number;\n-            topP?: number;\n-            randomSeed?: number;\n-            /**\n-             * @deprecated use safePrompt instead\n-             */\n-            safeMode?: boolean;\n-            safePrompt?: boolean;\n-            toolChoice?: ToolChoice;\n-            responseFormat?: ResponseFormat;\n-        }): AsyncGenerator<ChatCompletionResponseChunk, void, unknown>;\n-\n-        embeddings(options: {\n-            model: string;\n-            input: string | string[];\n-        }): Promise<EmbeddingResponse>;\n-    }\n-\n-    export default MistralClient;\n+export interface ModelPermission {\n+  id: string;\n+  object: 'model_permission';\n+  created: number;\n+  allow_create_engine: boolean;\n+  allow_sampling: boolean;\n+  allow_logprobs: boolean;\n+  allow_search_indices: boolean;\n+  allow_view: boolean;\n+  allow_fine_tuning: boolean;\n+  organization: string;\n+  group: string | null;\n+  is_blocking: boolean;\n }\n+\n+export interface Model {\n+  id: string;\n+  object: 'model';\n+  created: number;\n+  owned_by: string;\n+  root: string | null;\n+  parent: string | null;\n+  permission: ModelPermission[];\n+}\n+\n+export interface ListModelsResponse {\n+  object: 'list';\n+  data: Model[];\n+}\n+\n+export interface Function {\n+  name: string;\n+  description: string;\n+  parameters: object;\n+}\n+\n+// TODO: this is not actually used, but would technically be a break change to remove\n+export enum ToolType {\n+  function = 'function',\n+}\n+\n+export interface FunctionCall {\n+  name: string;\n+  arguments: string;\n+}\n+\n+export interface ToolCalls {\n+  id: string;\n+  function: FunctionCall;\n+}\n+\n+export enum ResponseFormats {\n+  json_object = 'json_object',\n+}\n+\n+export enum ToolChoice {\n+  auto = 'auto',\n+  any = 'any',\n+  none = 'none',\n+}\n+\n+export interface ResponseFormat {\n+  type: ResponseFormats | 'json_object';\n+}\n+\n+export interface TokenUsage {\n+  prompt_tokens: number;\n+  completion_tokens: number;\n+  total_tokens: number;\n+}\n+\n+export interface ChatCompletionResponseChoice {\n+  index: number;\n+  message: {\n+    role: string;\n+    content: string;\n+    tool_calls: null | ToolCalls[];\n+  };\n+  finish_reason: string;\n+}\n+\n+export interface ChatCompletionResponseChunkChoice {\n+  index: number;\n+  delta: {\n+    role?: string;\n+    content?: string;\n+    tool_calls?: ToolCalls[];\n+  };\n+  finish_reason: string;\n+}\n+\n+export interface ChatCompletionResponse {\n+  id: string;\n+  object: 'chat.completion';\n+  created: number;\n+  model: string;\n+  choices: ChatCompletionResponseChoice[];\n+  usage: TokenUsage;\n+}\n+\n+export interface ChatCompletionResponseChunk {\n+  id: string;\n+  object: 'chat.completion.chunk';\n+  created: number;\n+  model: string;\n+  choices: ChatCompletionResponseChunkChoice[];\n+  usage: TokenUsage | null;\n+}\n+\n+export interface Embedding {\n+  id: string;\n+  object: 'embedding';\n+  embedding: number[];\n+}\n+\n+export interface EmbeddingResponse {\n+  id: string;\n+  object: 'list';\n+  data: Embedding[];\n+  model: string;\n+  usage: TokenUsage;\n+}\n+\n+export interface Message {\n+  role: string;\n+  // TODO: this is not specified at https://docs.mistral.ai/redocusaurus/plugin-redoc-0.yaml\n+  name?: string,",
        "path": "src/client.d.ts",
        "commit_id": "26f7a598d2363adea6b325a1a41b0777390af4e2",
        "original_commit_id": "475821cbb075dd8ec3c61d5494700086c6aa5972",
        "user": {
          "login": "fuegoio",
          "id": 321778,
          "node_id": "MDQ6VXNlcjMyMTc3OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/321778?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fuegoio",
          "html_url": "https://github.com/fuegoio",
          "followers_url": "https://api.github.com/users/fuegoio/followers",
          "following_url": "https://api.github.com/users/fuegoio/following{/other_user}",
          "gists_url": "https://api.github.com/users/fuegoio/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fuegoio/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fuegoio/subscriptions",
          "organizations_url": "https://api.github.com/users/fuegoio/orgs",
          "repos_url": "https://api.github.com/users/fuegoio/repos",
          "events_url": "https://api.github.com/users/fuegoio/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fuegoio/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Normally there is no `name` on the message, I think we can remove it.",
        "created_at": "2024-05-07T07:37:31Z",
        "updated_at": "2024-05-07T07:45:32Z",
        "html_url": "https://github.com/mistralai/client-js/pull/72#discussion_r1591956063",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1591956063"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/72#discussion_r1591956063"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/72"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1591956063/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 127,
        "side": "RIGHT",
        "original_position": 320,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1591966003",
        "pull_request_review_id": 2042322511,
        "id": 1591966003,
        "node_id": "PRRC_kwDOK23oNM5e43kz",
        "diff_hunk": "@@ -1,194 +1,177 @@\n-declare module '@mistralai/mistralai' {\n-    export interface ModelPermission {\n-        id: string;\n-        object: 'model_permission';\n-        created: number;\n-        allow_create_engine: boolean;\n-        allow_sampling: boolean;\n-        allow_logprobs: boolean;\n-        allow_search_indices: boolean;\n-        allow_view: boolean;\n-        allow_fine_tuning: boolean;\n-        organization: string;\n-        group: string | null;\n-        is_blocking: boolean;\n-    }\n-\n-    export interface Model {\n-        id: string;\n-        object: 'model';\n-        created: number;\n-        owned_by: string;\n-        root: string | null;\n-        parent: string | null;\n-        permission: ModelPermission[];\n-    }\n-\n-    export interface ListModelsResponse {\n-        object: 'list';\n-        data: Model[];\n-    }\n-\n-    export interface Function {\n-        name: string;\n-        description: string;\n-        parameters: object;\n-    }\n-\n-    export enum ToolType {\n-        function = 'function',\n-    }\n-\n-    export interface FunctionCall {\n-        name: string;\n-        arguments: string;\n-    }\n-\n-    export interface ToolCalls {\n-        id: 'null';\n-        type: ToolType = ToolType.function;\n-        function: FunctionCall;\n-    }\n-\n-    export enum ResponseFormats {\n-        text = 'text',\n-        json_object = 'json_object',\n-    }\n-\n-    export enum ToolChoice {\n-        auto = 'auto',\n-        any = 'any',\n-        none = 'none',\n-    }\n-\n-    export interface ResponseFormat {\n-        type: ResponseFormats = ResponseFormats.text;\n-    }\n-\n-    export interface TokenUsage {\n-        prompt_tokens: number;\n-        completion_tokens: number;\n-        total_tokens: number;\n-    }\n-\n-    export interface ChatCompletionResponseChoice {\n-        index: number;\n-        message: {\n-            role: string;\n-            content: string;\n-        };\n-        finish_reason: string;\n-    }\n-\n-    export interface ChatCompletionResponseChunkChoice {\n-        index: number;\n-        delta: {\n-            role?: string;\n-            content?: string;\n-            tool_calls?: ToolCalls[];\n-        };\n-        finish_reason: string;\n-    }\n-\n-    export interface ChatCompletionResponse {\n-        id: string;\n-        object: 'chat.completion';\n-        created: number;\n-        model: string;\n-        choices: ChatCompletionResponseChoice[];\n-        usage: TokenUsage;\n-    }\n-\n-    export interface ChatCompletionResponseChunk {\n-        id: string;\n-        object: 'chat.completion.chunk';\n-        created: number;\n-        model: string;\n-        choices: ChatCompletionResponseChunkChoice[];\n-    }\n-\n-    export interface Embedding {\n-        id: string;\n-        object: 'embedding';\n-        embedding: number[];\n-    }\n-\n-    export interface EmbeddingResponse {\n-        id: string;\n-        object: 'list';\n-        data: Embedding[];\n-        model: string;\n-        usage: TokenUsage;\n-    }\n-\n-    class MistralClient {\n-        constructor(apiKey?: string, endpoint?: string);\n-\n-        private _request(\n-            method: string,\n-            path: string,\n-            request: unknown\n-        ): Promise<unknown>;\n-\n-        private _makeChatCompletionRequest(\n-            model: string,\n-            messages: Array<{ role: string; name?: string, content: string | string[], tool_calls?: ToolCalls[]; }>,\n-            tools?: Array<{ type: string; function:Function; }>, \n-            temperature?: number,\n-            maxTokens?: number,\n-            topP?: number,\n-            randomSeed?: number,\n-            stream?: boolean,\n-            /**\n-             * @deprecated use safePrompt instead\n-             */\n-            safeMode?: boolean,\n-            safePrompt?: boolean,\n-            toolChoice?: ToolChoice,\n-            responseFormat?: ResponseFormat\n-        ): object;\n-\n-        listModels(): Promise<ListModelsResponse>;\n-\n-        chat(options: {\n-            model: string;\n-            messages: Array<{ role: string; name?: string, content: string | string[], tool_calls?: ToolCalls[]; }>;\n-            tools?: Array<{ type: string; function:Function; }>; \n-            temperature?: number;\n-            maxTokens?: number;\n-            topP?: number;\n-            randomSeed?: number;\n-            /**\n-             * @deprecated use safePrompt instead\n-             */\n-            safeMode?: boolean;\n-            safePrompt?: boolean;\n-            toolChoice?: ToolChoice;\n-            responseFormat?: ResponseFormat; \n-        }): Promise<ChatCompletionResponse>;\n-\n-        chatStream(options: {\n-            model: string;\n-            messages: Array<{ role: string; name?: string, content: string | string[], tool_calls?: ToolCalls[]; }>;\n-            tools?: Array<{ type: string; function:Function; }>;\n-            temperature?: number;\n-            maxTokens?: number;\n-            topP?: number;\n-            randomSeed?: number;\n-            /**\n-             * @deprecated use safePrompt instead\n-             */\n-            safeMode?: boolean;\n-            safePrompt?: boolean;\n-            toolChoice?: ToolChoice;\n-            responseFormat?: ResponseFormat;\n-        }): AsyncGenerator<ChatCompletionResponseChunk, void, unknown>;\n-\n-        embeddings(options: {\n-            model: string;\n-            input: string | string[];\n-        }): Promise<EmbeddingResponse>;\n-    }\n-\n-    export default MistralClient;\n+export interface ModelPermission {\n+  id: string;\n+  object: 'model_permission';\n+  created: number;\n+  allow_create_engine: boolean;\n+  allow_sampling: boolean;\n+  allow_logprobs: boolean;\n+  allow_search_indices: boolean;\n+  allow_view: boolean;\n+  allow_fine_tuning: boolean;\n+  organization: string;\n+  group: string | null;\n+  is_blocking: boolean;\n }\n+\n+export interface Model {\n+  id: string;\n+  object: 'model';\n+  created: number;\n+  owned_by: string;\n+  root: string | null;\n+  parent: string | null;\n+  permission: ModelPermission[];\n+}\n+\n+export interface ListModelsResponse {\n+  object: 'list';\n+  data: Model[];\n+}\n+\n+export interface Function {\n+  name: string;\n+  description: string;\n+  parameters: object;\n+}\n+\n+// TODO: this is not actually used, but would technically be a break change to remove\n+export enum ToolType {\n+  function = 'function',\n+}\n+\n+export interface FunctionCall {\n+  name: string;\n+  arguments: string;\n+}\n+\n+export interface ToolCalls {\n+  id: string;\n+  function: FunctionCall;\n+}\n+\n+export enum ResponseFormats {",
        "path": "src/client.d.ts",
        "commit_id": "26f7a598d2363adea6b325a1a41b0777390af4e2",
        "original_commit_id": "475821cbb075dd8ec3c61d5494700086c6aa5972",
        "user": {
          "login": "fuegoio",
          "id": 321778,
          "node_id": "MDQ6VXNlcjMyMTc3OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/321778?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fuegoio",
          "html_url": "https://github.com/fuegoio",
          "followers_url": "https://api.github.com/users/fuegoio/followers",
          "following_url": "https://api.github.com/users/fuegoio/following{/other_user}",
          "gists_url": "https://api.github.com/users/fuegoio/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fuegoio/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fuegoio/subscriptions",
          "organizations_url": "https://api.github.com/users/fuegoio/orgs",
          "repos_url": "https://api.github.com/users/fuegoio/repos",
          "events_url": "https://api.github.com/users/fuegoio/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fuegoio/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "I think we should also remove the enums from the types and change them to types. A simple example like this does not work because the enums are TS only:\r\n\r\n```ts\r\nimport MistralClient, { ResponseFormats } from \"@mistralai/mistralai\";\r\n\r\nconst chatResponse = await mistralClient.chat({\r\n    model: \"mistral-large\",\r\n    temperature: 0.1,\r\n    responseFormat: { type: ResponseFormats.json_object },\r\n})`\r\n```\r\n\r\nThis raises the error `'mistralai/src/client.js' does not provide an export named 'ResponseFormats'`",
        "created_at": "2024-05-07T07:45:24Z",
        "updated_at": "2024-05-07T07:45:32Z",
        "html_url": "https://github.com/mistralai/client-js/pull/72#discussion_r1591966003",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1591966003"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/72#discussion_r1591966003"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/72"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1591966003/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 52,
        "side": "RIGHT",
        "original_position": 245,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1592011820",
        "pull_request_review_id": 2042414325,
        "id": 1592011820,
        "node_id": "PRRC_kwDOK23oNM5e5Cws",
        "diff_hunk": "@@ -1,194 +1,160 @@\n-declare module '@mistralai/mistralai' {\n-    export interface ModelPermission {\n-        id: string;\n-        object: 'model_permission';\n-        created: number;\n-        allow_create_engine: boolean;\n-        allow_sampling: boolean;\n-        allow_logprobs: boolean;\n-        allow_search_indices: boolean;\n-        allow_view: boolean;\n-        allow_fine_tuning: boolean;\n-        organization: string;\n-        group: string | null;\n-        is_blocking: boolean;\n-    }\n-\n-    export interface Model {\n-        id: string;\n-        object: 'model';\n-        created: number;\n-        owned_by: string;\n-        root: string | null;\n-        parent: string | null;\n-        permission: ModelPermission[];\n-    }\n-\n-    export interface ListModelsResponse {\n-        object: 'list';\n-        data: Model[];\n-    }\n-\n-    export interface Function {\n-        name: string;\n-        description: string;\n-        parameters: object;\n-    }\n-\n-    export enum ToolType {\n-        function = 'function',\n-    }\n-\n-    export interface FunctionCall {\n-        name: string;\n-        arguments: string;\n-    }\n-\n-    export interface ToolCalls {\n-        id: 'null';\n-        type: ToolType = ToolType.function;\n-        function: FunctionCall;",
        "path": "src/client.d.ts",
        "commit_id": "26f7a598d2363adea6b325a1a41b0777390af4e2",
        "original_commit_id": "d5eac49db22a2d8d78e5ca6d318c7c2ee2a436ea",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "What happened here? :) ",
        "created_at": "2024-05-07T08:20:59Z",
        "updated_at": "2024-05-07T08:20:59Z",
        "html_url": "https://github.com/mistralai/client-js/pull/72#discussion_r1592011820",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1592011820"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/72#discussion_r1592011820"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/72"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1592011820/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 50,
        "original_line": 50,
        "side": "LEFT",
        "original_position": 50,
        "position": 17,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1592026515",
        "pull_request_review_id": 2042437736,
        "id": 1592026515,
        "node_id": "PRRC_kwDOK23oNM5e5GWT",
        "diff_hunk": "@@ -1,194 +1,160 @@\n-declare module '@mistralai/mistralai' {\n-    export interface ModelPermission {\n-        id: string;\n-        object: 'model_permission';\n-        created: number;\n-        allow_create_engine: boolean;\n-        allow_sampling: boolean;\n-        allow_logprobs: boolean;\n-        allow_search_indices: boolean;\n-        allow_view: boolean;\n-        allow_fine_tuning: boolean;\n-        organization: string;\n-        group: string | null;\n-        is_blocking: boolean;\n-    }\n-\n-    export interface Model {\n-        id: string;\n-        object: 'model';\n-        created: number;\n-        owned_by: string;\n-        root: string | null;\n-        parent: string | null;\n-        permission: ModelPermission[];\n-    }\n-\n-    export interface ListModelsResponse {\n-        object: 'list';\n-        data: Model[];\n-    }\n-\n-    export interface Function {\n-        name: string;\n-        description: string;\n-        parameters: object;\n-    }\n-\n-    export enum ToolType {\n-        function = 'function',\n-    }\n-\n-    export interface FunctionCall {\n-        name: string;\n-        arguments: string;\n-    }\n-\n-    export interface ToolCalls {\n-        id: 'null';\n-        type: ToolType = ToolType.function;\n-        function: FunctionCall;",
        "path": "src/client.d.ts",
        "commit_id": "26f7a598d2363adea6b325a1a41b0777390af4e2",
        "original_commit_id": "d5eac49db22a2d8d78e5ca6d318c7c2ee2a436ea",
        "user": {
          "login": "fuegoio",
          "id": 321778,
          "node_id": "MDQ6VXNlcjMyMTc3OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/321778?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fuegoio",
          "html_url": "https://github.com/fuegoio",
          "followers_url": "https://api.github.com/users/fuegoio/followers",
          "following_url": "https://api.github.com/users/fuegoio/following{/other_user}",
          "gists_url": "https://api.github.com/users/fuegoio/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fuegoio/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fuegoio/subscriptions",
          "organizations_url": "https://api.github.com/users/fuegoio/orgs",
          "repos_url": "https://api.github.com/users/fuegoio/repos",
          "events_url": "https://api.github.com/users/fuegoio/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fuegoio/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "What do you mean?",
        "created_at": "2024-05-07T08:31:45Z",
        "updated_at": "2024-05-07T08:31:45Z",
        "html_url": "https://github.com/mistralai/client-js/pull/72#discussion_r1592026515",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1592026515"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/72#discussion_r1592026515"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/72"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1592026515/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 50,
        "original_line": 50,
        "side": "LEFT",
        "in_reply_to_id": 1592011820,
        "original_position": 50,
        "position": 17,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1592043365",
        "pull_request_review_id": 2042468833,
        "id": 1592043365,
        "node_id": "PRRC_kwDOK23oNM5e5Kdl",
        "diff_hunk": "@@ -1,194 +1,160 @@\n-declare module '@mistralai/mistralai' {\n-    export interface ModelPermission {\n-        id: string;\n-        object: 'model_permission';\n-        created: number;\n-        allow_create_engine: boolean;\n-        allow_sampling: boolean;\n-        allow_logprobs: boolean;\n-        allow_search_indices: boolean;\n-        allow_view: boolean;\n-        allow_fine_tuning: boolean;\n-        organization: string;\n-        group: string | null;\n-        is_blocking: boolean;\n-    }\n-\n-    export interface Model {\n-        id: string;\n-        object: 'model';\n-        created: number;\n-        owned_by: string;\n-        root: string | null;\n-        parent: string | null;\n-        permission: ModelPermission[];\n-    }\n-\n-    export interface ListModelsResponse {\n-        object: 'list';\n-        data: Model[];\n-    }\n-\n-    export interface Function {\n-        name: string;\n-        description: string;\n-        parameters: object;\n-    }\n-\n-    export enum ToolType {\n-        function = 'function',\n-    }\n-\n-    export interface FunctionCall {\n-        name: string;\n-        arguments: string;\n-    }\n-\n-    export interface ToolCalls {\n-        id: 'null';\n-        type: ToolType = ToolType.function;\n-        function: FunctionCall;",
        "path": "src/client.d.ts",
        "commit_id": "26f7a598d2363adea6b325a1a41b0777390af4e2",
        "original_commit_id": "d5eac49db22a2d8d78e5ca6d318c7c2ee2a436ea",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "```\r\nid: 'null';\r\ntype: ToolType = ToolType.function;\r\n```\r\n\r\nAs you mentioned, the enums don't work at runtime, and `null` is set to match the string null, not the null *type* (which is actually not appropriate either). Also, it's trying to set a default (`ToolType = ToolType.function;`) inside a `.d.ts` file, which I don't believe actually works. \r\n\r\nMore a rhetorical question than serious :) Wondering how the .. ",
        "created_at": "2024-05-07T08:40:29Z",
        "updated_at": "2024-05-07T08:40:29Z",
        "html_url": "https://github.com/mistralai/client-js/pull/72#discussion_r1592043365",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1592043365"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/72#discussion_r1592043365"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/72"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1592043365/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 50,
        "original_line": 50,
        "side": "LEFT",
        "in_reply_to_id": 1592011820,
        "original_position": 50,
        "position": 17,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1593845286",
        "pull_request_review_id": 2045342829,
        "id": 1593845286,
        "node_id": "PRRC_kwDOK23oNM5fACYm",
        "diff_hunk": "@@ -1,194 +1,160 @@\n-declare module '@mistralai/mistralai' {\n-    export interface ModelPermission {\n-        id: string;\n-        object: 'model_permission';\n-        created: number;\n-        allow_create_engine: boolean;\n-        allow_sampling: boolean;\n-        allow_logprobs: boolean;\n-        allow_search_indices: boolean;\n-        allow_view: boolean;\n-        allow_fine_tuning: boolean;\n-        organization: string;\n-        group: string | null;\n-        is_blocking: boolean;\n-    }\n-\n-    export interface Model {\n-        id: string;\n-        object: 'model';\n-        created: number;\n-        owned_by: string;\n-        root: string | null;\n-        parent: string | null;\n-        permission: ModelPermission[];\n-    }\n-\n-    export interface ListModelsResponse {\n-        object: 'list';\n-        data: Model[];\n-    }\n-\n-    export interface Function {\n-        name: string;\n-        description: string;\n-        parameters: object;\n-    }\n-\n-    export enum ToolType {\n-        function = 'function',\n-    }\n-\n-    export interface FunctionCall {\n-        name: string;\n-        arguments: string;\n-    }\n-\n-    export interface ToolCalls {\n-        id: 'null';\n-        type: ToolType = ToolType.function;\n-        function: FunctionCall;",
        "path": "src/client.d.ts",
        "commit_id": "26f7a598d2363adea6b325a1a41b0777390af4e2",
        "original_commit_id": "d5eac49db22a2d8d78e5ca6d318c7c2ee2a436ea",
        "user": {
          "login": "fuegoio",
          "id": 321778,
          "node_id": "MDQ6VXNlcjMyMTc3OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/321778?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fuegoio",
          "html_url": "https://github.com/fuegoio",
          "followers_url": "https://api.github.com/users/fuegoio/followers",
          "following_url": "https://api.github.com/users/fuegoio/following{/other_user}",
          "gists_url": "https://api.github.com/users/fuegoio/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fuegoio/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fuegoio/subscriptions",
          "organizations_url": "https://api.github.com/users/fuegoio/orgs",
          "repos_url": "https://api.github.com/users/fuegoio/repos",
          "events_url": "https://api.github.com/users/fuegoio/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fuegoio/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Yeah the `null` string is expected, as before our API change the id returned by the API was always `'null'` (the string). Now it is function call ids yes. The default stuff well I'm not sure ahah",
        "created_at": "2024-05-08T11:01:38Z",
        "updated_at": "2024-05-08T11:01:39Z",
        "html_url": "https://github.com/mistralai/client-js/pull/72#discussion_r1593845286",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/72",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1593845286"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/72#discussion_r1593845286"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/72"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1593845286/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 50,
        "original_line": 50,
        "side": "LEFT",
        "in_reply_to_id": 1592011820,
        "original_position": 50,
        "position": 17,
        "subject_type": "line"
      }
    ]
  },
  "68": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2092799519",
        "html_url": "https://github.com/mistralai/client-js/pull/68#issuecomment-2092799519",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/68",
        "id": 2092799519,
        "node_id": "IC_kwDOK23oNM58vZYf",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-03T11:15:26Z",
        "updated_at": "2024-05-03T11:17:09Z",
        "author_association": "CONTRIBUTOR",
        "body": "@lerela @fuegoio\r\n\r\nWhen you get a chance? \r\n\r\nThx",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2092799519/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2094530459",
        "html_url": "https://github.com/mistralai/client-js/pull/68#issuecomment-2094530459",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/68",
        "id": 2094530459,
        "node_id": "IC_kwDOK23oNM581_-b",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-05T00:57:06Z",
        "updated_at": "2024-05-05T00:57:06Z",
        "author_association": "CONTRIBUTOR",
        "body": "@lerela \r\n\r\nLet's go!",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2094530459/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1587042589",
        "pull_request_review_id": 2034783319,
        "id": 1587042589,
        "node_id": "PRRC_kwDOK23oNM5emFkd",
        "diff_hunk": "@@ -82,7 +83,7 @@ class MistralClient {\n         'Authorization': `Bearer ${this.apiKey}`,\n       },\n       body: method !== 'get' ? JSON.stringify(request) : null,\n-      timeout: this.timeout * 1000,\n+      signal: signal ?? AbortSignal.timeout(this.timeout * 1000),",
        "path": "src/client.js",
        "commit_id": "3ce76a0d2712a497075e7ba0e85acd45e1124630",
        "original_commit_id": "74faf139644047340ab60bac308fc8b5141cf4d8",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "~~Due to the limitations of what's possible when attempting to merge a user provided signal and a timeout signal, this simple approach may be the best that can be done without passing in an AbortController and implementing a timeout that calls its abort method.~~ Thus if the user provides a signal, they are responsible for managing timeouts as well. This would be non-obvious to most users though. On the flip side, passing around an AbortController seems non-standard. \r\n\r\n~~We could document the parameter with something along these lines:\r\n\"Users must manage timeouts for their own AbortSignals. Without a user-provided signal, a default timeout of [x] seconds applies automatically.\"~~",
        "created_at": "2024-05-02T04:19:26Z",
        "updated_at": "2024-05-03T06:03:53Z",
        "html_url": "https://github.com/mistralai/client-js/pull/68#discussion_r1587042589",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/68",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1587042589"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/68#discussion_r1587042589"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/68"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1587042589/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 86,
        "side": "RIGHT",
        "original_position": 17,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1587050890",
        "pull_request_review_id": 2034795435,
        "id": 1587050890,
        "node_id": "PRRC_kwDOK23oNM5emHmK",
        "diff_hunk": "@@ -82,7 +83,7 @@ class MistralClient {\n         'Authorization': `Bearer ${this.apiKey}`,\n       },\n       body: method !== 'get' ? JSON.stringify(request) : null,\n-      timeout: this.timeout * 1000,\n+      signal: signal ?? AbortSignal.timeout(this.timeout * 1000),",
        "path": "src/client.js",
        "commit_id": "3ce76a0d2712a497075e7ba0e85acd45e1124630",
        "original_commit_id": "74faf139644047340ab60bac308fc8b5141cf4d8",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Actually, that may not be the case re: merging, as the signal.reason /is/ available and should be possible to transfer to a new merged signal \r\n\r\n(\r\nLLM: says no, \r\nME: waiiiit, didn't I check the reason in a catch block ...\"\r\n)\r\n",
        "created_at": "2024-05-02T04:36:39Z",
        "updated_at": "2024-05-02T04:57:14Z",
        "html_url": "https://github.com/mistralai/client-js/pull/68#discussion_r1587050890",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/68",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1587050890"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/68#discussion_r1587050890"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/68"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1587050890/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 86,
        "side": "RIGHT",
        "in_reply_to_id": 1587042589,
        "original_position": 17,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1590465548",
        "pull_request_review_id": 2039861700,
        "id": 1590465548,
        "node_id": "PRRC_kwDOK23oNM5ezJQM",
        "diff_hunk": "@@ -221,6 +246,8 @@ class MistralClient {\n    * @param {*} safePrompt whether to use safe mode, e.g. true\n    * @param {*} toolChoice the tool to use, e.g. 'auto'\n    * @param {*} responseFormat the format of the response, e.g. 'json_format'\n+   * @param {*} [signal] - optional AbortSignal instance to control request",
        "path": "src/client.js",
        "commit_id": "3ce76a0d2712a497075e7ba0e85acd45e1124630",
        "original_commit_id": "f7ae679863daf8ab24f6132d165e2e038e6f4bb9",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Actually, it might be worth considering whether to move `signal` into a second object param, and keep it out of the bag of data that is sent to the server. It's a bit cleaner that way. \r\n\r\nOn a related note, I realised that the JSDoc comments are actually incorrect ([see](https://github.com/mistralai/client-js/issues/70#issuecomment-2095044637))",
        "created_at": "2024-05-06T01:19:37Z",
        "updated_at": "2024-05-06T01:19:37Z",
        "html_url": "https://github.com/mistralai/client-js/pull/68#discussion_r1590465548",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/68",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1590465548"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/68#discussion_r1590465548"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/68"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1590465548/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 249,
        "side": "RIGHT",
        "original_position": 56,
        "position": null,
        "subject_type": "line"
      }
    ]
  },
  "66": {
    "issue_comments": [],
    "review_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1584135208",
        "pull_request_review_id": 2030210419,
        "id": 1584135208,
        "node_id": "PRRC_kwDOK23oNM5ea_wo",
        "diff_hunk": "@@ -1,25 +1,11 @@\n-let isNode = false;\n-\n const VERSION = '0.0.3';\n const RETRY_STATUS_CODES = [429, 500, 502, 503, 504];\n const ENDPOINT = 'https://api.mistral.ai';\n \n-/**\n- * Initialize fetch\n- * @return {Promise<void>}\n- */\n-async function initializeFetch() {\n-  if (typeof window === 'undefined' ||\n-    typeof globalThis.fetch === 'undefined') {\n-    const nodeFetch = await import('node-fetch');\n-    fetch = nodeFetch.default;\n-    isNode = true;\n-  } else {\n-    fetch = globalThis.fetch;\n-  }\n-}\n-\n-initializeFetch();\n+// We can't use a top level await if eventually this is to be converted\n+// to typescript and compiled to commonjs, or similarly using babel.\n+const configuredFetch = Promise.resolve(\n+  globalThis.fetch ?? import('node-fetch').then((m) => m.default));",
        "path": "src/client.js",
        "commit_id": "a6a0310e839c7841478a5098110fbdb5fc2aa4b7",
        "original_commit_id": "a6a0310e839c7841478a5098110fbdb5fc2aa4b7",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Some credit to [fuegoio](https://github.com/fuegoio) here:\r\nhttps://github.com/mistralai/client-js/pull/65#pullrequestreview-2028939725",
        "created_at": "2024-04-30T05:00:23Z",
        "updated_at": "2024-04-30T05:00:24Z",
        "html_url": "https://github.com/mistralai/client-js/pull/66#discussion_r1584135208",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/66",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1584135208"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/66#discussion_r1584135208"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/66"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1584135208/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 8,
        "original_line": 8,
        "side": "RIGHT",
        "original_position": 26,
        "position": 26,
        "subject_type": "line"
      }
    ]
  },
  "65": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2083162720",
        "html_url": "https://github.com/mistralai/client-js/pull/65#issuecomment-2083162720",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/65",
        "id": 2083162720,
        "node_id": "IC_kwDOK23oNM58Kopg",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-04-29T16:24:02Z",
        "updated_at": "2024-04-29T16:24:02Z",
        "author_association": "CONTRIBUTOR",
        "body": ">\n> On mobile/email.\n\nI believe you are correct regarding the logic but it would depend on how\noffended you are by not reducing as to whether it should be corrected. As I\nage I find more explicit code easier to work with. A mix of pragmatism and\nslowing.\n\nThat said, can change it.\n\n\n\n> Message ID: ***@***.***>\n>\n",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2083162720/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1583342100",
        "pull_request_review_id": 2028939725,
        "id": 1583342100,
        "node_id": "PRRC_kwDOK23oNM5eX-IU",
        "diff_hunk": "@@ -90,11 +89,13 @@ class MistralClient {\n \n     for (let attempts = 0; attempts < this.maxRetries; attempts++) {\n       try {\n-        const response = await fetch(url, options);\n+        const response = await this._fetch(url, options);\n \n         if (response.ok) {\n           if (request?.stream) {\n-            if (isNode) {\n+            if (isNode && !haveNativeFetch ||\n+              // The test mocks do not return a body with getReader\n+              typeof response.body.getReader === 'undefined') {",
        "path": "src/client.js",
        "commit_id": "848d53929ec7ecc38a2075eb2d44db30f6a8a9ff",
        "original_commit_id": "52a8a4bad93d1c3551b0893c7efa3c2e0e93dd96",
        "user": {
          "login": "fuegoio",
          "id": 321778,
          "node_id": "MDQ6VXNlcjMyMTc3OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/321778?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fuegoio",
          "html_url": "https://github.com/fuegoio",
          "followers_url": "https://api.github.com/users/fuegoio/followers",
          "following_url": "https://api.github.com/users/fuegoio/following{/other_user}",
          "gists_url": "https://api.github.com/users/fuegoio/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fuegoio/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fuegoio/subscriptions",
          "organizations_url": "https://api.github.com/users/fuegoio/orgs",
          "repos_url": "https://api.github.com/users/fuegoio/repos",
          "events_url": "https://api.github.com/users/fuegoio/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fuegoio/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "I think here we can remove the condition on `isNode` and `haveNativeFetch` as the second part of the condition will catch this anyway",
        "created_at": "2024-04-29T16:04:03Z",
        "updated_at": "2024-04-29T16:05:00Z",
        "html_url": "https://github.com/mistralai/client-js/pull/65#discussion_r1583342100",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/65",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1583342100"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/65#discussion_r1583342100"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/65"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1583342100/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 98,
        "side": "RIGHT",
        "original_position": 61,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1583343042",
        "pull_request_review_id": 2028939725,
        "id": 1583343042,
        "node_id": "PRRC_kwDOK23oNM5eX-XC",
        "diff_hunk": "@@ -1,25 +1,14 @@\n-let isNode = false;\n-\n const VERSION = '0.0.3';\n const RETRY_STATUS_CODES = [429, 500, 502, 503, 504];\n const ENDPOINT = 'https://api.mistral.ai';\n \n-/**\n- * Initialize fetch\n- * @return {Promise<void>}\n- */\n-async function initializeFetch() {\n-  if (typeof window === 'undefined' ||\n-    typeof globalThis.fetch === 'undefined') {\n-    const nodeFetch = await import('node-fetch');\n-    fetch = nodeFetch.default;\n-    isNode = true;\n-  } else {\n-    fetch = globalThis.fetch;\n-  }\n-}\n+const isNode = typeof process !== 'undefined' &&\n+  process.versions != null &&\n+  process.versions.node != null;\n+const haveNativeFetch = typeof globalThis.fetch !== 'undefined';\n \n-initializeFetch();\n+const configuredFetch = isNode && !haveNativeFetch ?\n+  (await import('node-fetch')).default : globalThis.fetch;",
        "path": "src/client.js",
        "commit_id": "848d53929ec7ecc38a2075eb2d44db30f6a8a9ff",
        "original_commit_id": "52a8a4bad93d1c3551b0893c7efa3c2e0e93dd96",
        "user": {
          "login": "fuegoio",
          "id": 321778,
          "node_id": "MDQ6VXNlcjMyMTc3OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/321778?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fuegoio",
          "html_url": "https://github.com/fuegoio",
          "followers_url": "https://api.github.com/users/fuegoio/followers",
          "following_url": "https://api.github.com/users/fuegoio/following{/other_user}",
          "gists_url": "https://api.github.com/users/fuegoio/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fuegoio/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fuegoio/subscriptions",
          "organizations_url": "https://api.github.com/users/fuegoio/orgs",
          "repos_url": "https://api.github.com/users/fuegoio/repos",
          "events_url": "https://api.github.com/users/fuegoio/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fuegoio/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "I think here we should only use the `haveNativeFetch` condition no? Is there a case where `isNode` would be `false` and `haveNativeFetch` be `false` as well?",
        "created_at": "2024-04-29T16:04:53Z",
        "updated_at": "2024-04-29T16:05:00Z",
        "html_url": "https://github.com/mistralai/client-js/pull/65#discussion_r1583343042",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/65",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1583343042"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/65#discussion_r1583343042"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/65"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1583343042/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 11,
        "side": "RIGHT",
        "original_position": 28,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1583920819",
        "pull_request_review_id": 2029869991,
        "id": 1583920819,
        "node_id": "PRRC_kwDOK23oNM5eaLaz",
        "diff_hunk": "@@ -1,25 +1,14 @@\n-let isNode = false;\n-\n const VERSION = '0.0.3';\n const RETRY_STATUS_CODES = [429, 500, 502, 503, 504];\n const ENDPOINT = 'https://api.mistral.ai';\n \n-/**\n- * Initialize fetch\n- * @return {Promise<void>}\n- */\n-async function initializeFetch() {\n-  if (typeof window === 'undefined' ||\n-    typeof globalThis.fetch === 'undefined') {\n-    const nodeFetch = await import('node-fetch');\n-    fetch = nodeFetch.default;\n-    isNode = true;\n-  } else {\n-    fetch = globalThis.fetch;\n-  }\n-}\n+const isNode = typeof process !== 'undefined' &&\n+  process.versions != null &&\n+  process.versions.node != null;\n+const haveNativeFetch = typeof globalThis.fetch !== 'undefined';\n \n-initializeFetch();\n+const configuredFetch = isNode && !haveNativeFetch ?\n+  (await import('node-fetch')).default : globalThis.fetch;",
        "path": "src/client.js",
        "commit_id": "848d53929ec7ecc38a2075eb2d44db30f6a8a9ff",
        "original_commit_id": "52a8a4bad93d1c3551b0893c7efa3c2e0e93dd96",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Back on laptop :) Thanks for the prodding\r\n\r\n```typescript\r\nconst configuredFetch = globalThis.fetch ??\r\n  (await import('node-fetch')).default;\r\n```\r\n\r\nWent with this and killed off haveNativeFetch/isNode entirely by just using feature detection, and adding a comment\r\n\r\n```typescript\r\n// When using node-fetch or test mocks, getReader is not defined\r\nif (typeof response.body.getReader === 'undefined') {\r\n```\r\n\r\n",
        "created_at": "2024-04-29T23:38:54Z",
        "updated_at": "2024-04-30T02:24:21Z",
        "html_url": "https://github.com/mistralai/client-js/pull/65#discussion_r1583920819",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/65",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1583920819"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/65#discussion_r1583920819"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/65"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1583920819/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 11,
        "side": "RIGHT",
        "in_reply_to_id": 1583343042,
        "original_position": 28,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1583933713",
        "pull_request_review_id": 2029893449,
        "id": 1583933713,
        "node_id": "PRRC_kwDOK23oNM5eaOkR",
        "diff_hunk": "@@ -1,25 +1,9 @@\n-let isNode = false;\n-\n const VERSION = '0.0.3';\n const RETRY_STATUS_CODES = [429, 500, 502, 503, 504];\n const ENDPOINT = 'https://api.mistral.ai';\n \n-/**\n- * Initialize fetch\n- * @return {Promise<void>}\n- */\n-async function initializeFetch() {\n-  if (typeof window === 'undefined' ||\n-    typeof globalThis.fetch === 'undefined') {\n-    const nodeFetch = await import('node-fetch');\n-    fetch = nodeFetch.default;\n-    isNode = true;\n-  } else {\n-    fetch = globalThis.fetch;\n-  }\n-}\n-\n-initializeFetch();\n+const configuredFetch = globalThis.fetch ??",
        "path": "src/client.js",
        "commit_id": "848d53929ec7ecc38a2075eb2d44db30f6a8a9ff",
        "original_commit_id": "6e2dd95eea9bad0b473bc40115068c9f6ac93356",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "This should work now in service workers (mv3 web ext), and in newer versions of node with fetch available natively",
        "created_at": "2024-04-29T23:44:50Z",
        "updated_at": "2024-04-29T23:44:50Z",
        "html_url": "https://github.com/mistralai/client-js/pull/65#discussion_r1583933713",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/65",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1583933713"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/65#discussion_r1583933713"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/65"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1583933713/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 5,
        "side": "RIGHT",
        "original_position": 23,
        "position": null,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1584113754",
        "pull_request_review_id": 2030180729,
        "id": 1584113754,
        "node_id": "PRRC_kwDOK23oNM5ea6ha",
        "diff_hunk": "@@ -1,25 +1,9 @@\n-let isNode = false;\n-\n const VERSION = '0.0.3';\n const RETRY_STATUS_CODES = [429, 500, 502, 503, 504];\n const ENDPOINT = 'https://api.mistral.ai';\n \n-/**\n- * Initialize fetch\n- * @return {Promise<void>}\n- */\n-async function initializeFetch() {\n-  if (typeof window === 'undefined' ||\n-    typeof globalThis.fetch === 'undefined') {\n-    const nodeFetch = await import('node-fetch');\n-    fetch = nodeFetch.default;\n-    isNode = true;\n-  } else {\n-    fetch = globalThis.fetch;\n-  }\n-}\n-\n-initializeFetch();\n+const configuredFetch = globalThis.fetch ??\n+  (await import('node-fetch')).default;",
        "path": "src/client.js",
        "commit_id": "848d53929ec7ecc38a2075eb2d44db30f6a8a9ff",
        "original_commit_id": "6e2dd95eea9bad0b473bc40115068c9f6ac93356",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Actually, this (top level await) won't work with commonjs (which this library should ideally support in the future)",
        "created_at": "2024-04-30T04:25:12Z",
        "updated_at": "2024-04-30T04:29:06Z",
        "html_url": "https://github.com/mistralai/client-js/pull/65#discussion_r1584113754",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/65",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1584113754"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/65#discussion_r1584113754"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/65"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1584113754/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 6,
        "side": "RIGHT",
        "original_position": 24,
        "position": null,
        "subject_type": "line"
      }
    ]
  },
  "63": {
    "issue_comments": [],
    "review_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1582538661",
        "pull_request_review_id": 2027562884,
        "id": 1582538661,
        "node_id": "PRRC_kwDOK23oNM5eU5-l",
        "diff_hunk": "@@ -9,17 +9,19 @@ const ENDPOINT = 'https://api.mistral.ai';\n  * @return {Promise<void>}\n  */\n async function initializeFetch() {\n-  if (typeof window === 'undefined' ||\n-    typeof globalThis.fetch === 'undefined') {\n-    const nodeFetch = await import('node-fetch');\n-    fetch = nodeFetch.default;\n+  if (typeof window === 'undefined') {",
        "path": "src/client.js",
        "commit_id": "8edf10b3ba39728ea6aad05c1a9ac80bca19e240",
        "original_commit_id": "8edf10b3ba39728ea6aad05c1a9ac80bca19e240",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Some comments:\r\n\r\n`window` is also not defined in service workers, as used by Web Extensions, using manifest version 3 \r\n\r\nIt seems the `isNode` flag is used to determine when to return the response.body directly from the `_request` method, vs implementing an async iterator.\r\n\r\nIn fact, in newer versions of node, with native fetch you need to do much the same, so `isNode` is a somewhat deceptive name here. It's more node-fetch specific if I'm not mistaken\r\n\r\nIn any case, this library should work in:\r\n1. browser in a normal page\r\n2. browser in a service worker\r\n3. an older version of node, without native fetch\r\n4. a newer version of node, with native fetch\r\n",
        "created_at": "2024-04-29T04:57:08Z",
        "updated_at": "2024-04-29T05:30:49Z",
        "html_url": "https://github.com/mistralai/client-js/pull/63#discussion_r1582538661",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/63",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1582538661"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/63#discussion_r1582538661"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/63"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1582538661/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 12,
        "original_line": 12,
        "side": "RIGHT",
        "original_position": 8,
        "position": 8,
        "subject_type": "line"
      }
    ]
  },
  "51": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2095562797",
        "html_url": "https://github.com/mistralai/client-js/pull/51#issuecomment-2095562797",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/51",
        "id": 2095562797,
        "node_id": "IC_kwDOK23oNM5858At",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-06T09:34:44Z",
        "updated_at": "2024-05-06T09:34:44Z",
        "author_association": "CONTRIBUTOR",
        "body": "This is not necessary. You are supposed to use as so:\r\nhttps://github.com/mistralai/client-js/blob/649923634ff7302f2e7c58c505cbe5cb3a431c68/examples/chat_with_streaming.js#L1-L18",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2095562797/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1503377694",
        "pull_request_review_id": 1902147790,
        "id": 1503377694,
        "node_id": "PRRC_kwDOK23oNM5Zm7ke",
        "diff_hunk": "@@ -325,6 +325,8 @@ class MistralClient {\n         }\n       }\n     }\n+\n+    return response;",
        "path": "src/client.js",
        "commit_id": "ad4ddfb118275ffc0fceece14e851fe88df8f4d4",
        "original_commit_id": "ad4ddfb118275ffc0fceece14e851fe88df8f4d4",
        "user": {
          "login": "ytimocin",
          "id": 5220939,
          "node_id": "MDQ6VXNlcjUyMjA5Mzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5220939?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ytimocin",
          "html_url": "https://github.com/ytimocin",
          "followers_url": "https://api.github.com/users/ytimocin/followers",
          "following_url": "https://api.github.com/users/ytimocin/following{/other_user}",
          "gists_url": "https://api.github.com/users/ytimocin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ytimocin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ytimocin/subscriptions",
          "organizations_url": "https://api.github.com/users/ytimocin/orgs",
          "repos_url": "https://api.github.com/users/ytimocin/repos",
          "events_url": "https://api.github.com/users/ytimocin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ytimocin/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Both unit tests and **chat_with_streaming** example pass with and without this one.",
        "created_at": "2024-02-26T22:13:12Z",
        "updated_at": "2024-02-26T22:13:12Z",
        "html_url": "https://github.com/mistralai/client-js/pull/51#discussion_r1503377694",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/51",
        "author_association": "NONE",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1503377694"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/51#discussion_r1503377694"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/51"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1503377694/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 329,
        "original_line": 329,
        "side": "RIGHT",
        "original_position": 5,
        "position": 5,
        "subject_type": "line"
      }
    ]
  },
  "43": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2101002250",
        "html_url": "https://github.com/mistralai/client-js/pull/43#issuecomment-2101002250",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/43",
        "id": 2101002250,
        "node_id": "IC_kwDOK23oNM59OsAK",
        "user": {
          "login": "fuegoio",
          "id": 321778,
          "node_id": "MDQ6VXNlcjMyMTc3OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/321778?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fuegoio",
          "html_url": "https://github.com/fuegoio",
          "followers_url": "https://api.github.com/users/fuegoio/followers",
          "following_url": "https://api.github.com/users/fuegoio/following{/other_user}",
          "gists_url": "https://api.github.com/users/fuegoio/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fuegoio/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fuegoio/subscriptions",
          "organizations_url": "https://api.github.com/users/fuegoio/orgs",
          "repos_url": "https://api.github.com/users/fuegoio/repos",
          "events_url": "https://api.github.com/users/fuegoio/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fuegoio/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-05-08T16:49:44Z",
        "updated_at": "2024-05-08T16:49:44Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks a lot for your contribution! The version update was done in the CI, I changed the version everywhere for the latest release and will do the same from now on :)",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2101002250/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": []
  },
  "42": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1968876980",
        "html_url": "https://github.com/mistralai/client-js/pull/42#issuecomment-1968876980",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/42",
        "id": 1968876980,
        "node_id": "IC_kwDOK23oNM51Wq20",
        "user": {
          "login": "flore2003",
          "id": 500358,
          "node_id": "MDQ6VXNlcjUwMDM1OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/500358?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flore2003",
          "html_url": "https://github.com/flore2003",
          "followers_url": "https://api.github.com/users/flore2003/followers",
          "following_url": "https://api.github.com/users/flore2003/following{/other_user}",
          "gists_url": "https://api.github.com/users/flore2003/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flore2003/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flore2003/subscriptions",
          "organizations_url": "https://api.github.com/users/flore2003/orgs",
          "repos_url": "https://api.github.com/users/flore2003/repos",
          "events_url": "https://api.github.com/users/flore2003/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flore2003/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-02-28T12:26:12Z",
        "updated_at": "2024-02-28T12:26:12Z",
        "author_association": "CONTRIBUTOR",
        "body": "This actually also fixes #44 by preventing the overwriting the global `fetch`. Can this be merged and published soon? It is breaking other libraries that rely on the built in fetch implementation. \ud83d\ude4f ",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1968876980/reactions",
          "total_count": 5,
          "+1": 5,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2036681216",
        "html_url": "https://github.com/mistralai/client-js/pull/42#issuecomment-2036681216",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/42",
        "id": 2036681216,
        "node_id": "IC_kwDOK23oNM55ZUoA",
        "user": {
          "login": "baptisteArno",
          "id": 16015833,
          "node_id": "MDQ6VXNlcjE2MDE1ODMz",
          "avatar_url": "https://avatars.githubusercontent.com/u/16015833?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/baptisteArno",
          "html_url": "https://github.com/baptisteArno",
          "followers_url": "https://api.github.com/users/baptisteArno/followers",
          "following_url": "https://api.github.com/users/baptisteArno/following{/other_user}",
          "gists_url": "https://api.github.com/users/baptisteArno/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/baptisteArno/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/baptisteArno/subscriptions",
          "organizations_url": "https://api.github.com/users/baptisteArno/orgs",
          "repos_url": "https://api.github.com/users/baptisteArno/repos",
          "events_url": "https://api.github.com/users/baptisteArno/events{/privacy}",
          "received_events_url": "https://api.github.com/users/baptisteArno/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-04-04T09:35:27Z",
        "updated_at": "2024-04-04T09:35:27Z",
        "author_association": "NONE",
        "body": "Yes please, it breaks all other fetch-based libraries",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2036681216/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": []
  },
  "41": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1893415806",
        "html_url": "https://github.com/mistralai/client-js/pull/41#issuecomment-1893415806",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/41",
        "id": 1893415806,
        "node_id": "IC_kwDOK23oNM5w2zt-",
        "user": {
          "login": "Bam4d",
          "id": 1370765,
          "node_id": "MDQ6VXNlcjEzNzA3NjU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1370765?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Bam4d",
          "html_url": "https://github.com/Bam4d",
          "followers_url": "https://api.github.com/users/Bam4d/followers",
          "following_url": "https://api.github.com/users/Bam4d/following{/other_user}",
          "gists_url": "https://api.github.com/users/Bam4d/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Bam4d/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Bam4d/subscriptions",
          "organizations_url": "https://api.github.com/users/Bam4d/orgs",
          "repos_url": "https://api.github.com/users/Bam4d/repos",
          "events_url": "https://api.github.com/users/Bam4d/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Bam4d/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-01-16T09:59:07Z",
        "updated_at": "2024-01-16T09:59:07Z",
        "author_association": "COLLABORATOR",
        "body": "Hey, This looks great. Thanks for you work!\r\n\r\nI think for such a big change it would be good to have this in your own repository such as pBread/client-ts.\r\n\r\nWe can point people to your version on our third party libs page also.\r\n\r\nThanks!",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1893415806/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1894200451",
        "html_url": "https://github.com/mistralai/client-js/pull/41#issuecomment-1894200451",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/41",
        "id": 1894200451,
        "node_id": "IC_kwDOK23oNM5w5zSD",
        "user": {
          "login": "pBread",
          "id": 4473570,
          "node_id": "MDQ6VXNlcjQ0NzM1NzA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4473570?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/pBread",
          "html_url": "https://github.com/pBread",
          "followers_url": "https://api.github.com/users/pBread/followers",
          "following_url": "https://api.github.com/users/pBread/following{/other_user}",
          "gists_url": "https://api.github.com/users/pBread/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/pBread/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/pBread/subscriptions",
          "organizations_url": "https://api.github.com/users/pBread/orgs",
          "repos_url": "https://api.github.com/users/pBread/repos",
          "events_url": "https://api.github.com/users/pBread/events{/privacy}",
          "received_events_url": "https://api.github.com/users/pBread/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-01-16T17:32:59Z",
        "updated_at": "2024-01-16T17:32:59Z",
        "author_association": "NONE",
        "body": "I\u2019d like to contribute to this project. Mistral\u2019s API is going to change and the core project will have more support.\r\n\r\nThe problem is there are several important building blocks missing from the current implementation. Notably, a build system and native Typescript support. Implementing those require a lot of re-write and directory structure changes.\r\n\r\nIn either case, I\u2019ll leave the branch as it is. You can reference it when you want to tackle those features.\r\n\r\nIn the meanwhile, there are some changes I can port into smaller pull requests. ",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1894200451/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2404832858",
        "html_url": "https://github.com/mistralai/client-js/pull/41#issuecomment-2404832858",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/41",
        "id": 2404832858,
        "node_id": "IC_kwDOK23oNM6PVtZa",
        "user": {
          "login": "GaspardBT",
          "id": 26529448,
          "node_id": "MDQ6VXNlcjI2NTI5NDQ4",
          "avatar_url": "https://avatars.githubusercontent.com/u/26529448?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GaspardBT",
          "html_url": "https://github.com/GaspardBT",
          "followers_url": "https://api.github.com/users/GaspardBT/followers",
          "following_url": "https://api.github.com/users/GaspardBT/following{/other_user}",
          "gists_url": "https://api.github.com/users/GaspardBT/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GaspardBT/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GaspardBT/subscriptions",
          "organizations_url": "https://api.github.com/users/GaspardBT/orgs",
          "repos_url": "https://api.github.com/users/GaspardBT/repos",
          "events_url": "https://api.github.com/users/GaspardBT/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GaspardBT/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-10-10T11:26:30Z",
        "updated_at": "2024-10-10T11:26:30Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for opening this PR. We have **deprecated** this package in favor of [mistralai/client-ts](https://github.com/mistralai/client-ts), which is the new official Mistral client, **compatible** with both TypeScript and JavaScript.\r\n\r\nYou can find all installation information [here](https://github.com/mistralai/client-ts?tab=readme-ov-file#sdk-installation).\r\n\r\nThis change is effective starting with version 1.0.0 of the [npm package](https://www.npmjs.com/package/@mistralai/mistralai?activeTab=readme).\r\n\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2404832858/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": []
  },
  "39": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1892651528",
        "html_url": "https://github.com/mistralai/client-js/pull/39#issuecomment-1892651528",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/39",
        "id": 1892651528,
        "node_id": "IC_kwDOK23oNM5wz5II",
        "user": {
          "login": "pBread",
          "id": 4473570,
          "node_id": "MDQ6VXNlcjQ0NzM1NzA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4473570?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/pBread",
          "html_url": "https://github.com/pBread",
          "followers_url": "https://api.github.com/users/pBread/followers",
          "following_url": "https://api.github.com/users/pBread/following{/other_user}",
          "gists_url": "https://api.github.com/users/pBread/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/pBread/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/pBread/subscriptions",
          "organizations_url": "https://api.github.com/users/pBread/orgs",
          "repos_url": "https://api.github.com/users/pBread/repos",
          "events_url": "https://api.github.com/users/pBread/events{/privacy}",
          "received_events_url": "https://api.github.com/users/pBread/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-01-15T18:58:59Z",
        "updated_at": "2024-01-15T18:58:59Z",
        "author_association": "NONE",
        "body": "Whoops.. meant to pull this into my fork, not the main repo",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1892651528/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": []
  },
  "36": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1891949842",
        "html_url": "https://github.com/mistralai/client-js/pull/36#issuecomment-1891949842",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/36",
        "id": 1891949842,
        "node_id": "IC_kwDOK23oNM5wxN0S",
        "user": {
          "login": "Bam4d",
          "id": 1370765,
          "node_id": "MDQ6VXNlcjEzNzA3NjU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1370765?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Bam4d",
          "html_url": "https://github.com/Bam4d",
          "followers_url": "https://api.github.com/users/Bam4d/followers",
          "following_url": "https://api.github.com/users/Bam4d/following{/other_user}",
          "gists_url": "https://api.github.com/users/Bam4d/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Bam4d/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Bam4d/subscriptions",
          "organizations_url": "https://api.github.com/users/Bam4d/orgs",
          "repos_url": "https://api.github.com/users/Bam4d/repos",
          "events_url": "https://api.github.com/users/Bam4d/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Bam4d/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-01-15T11:13:48Z",
        "updated_at": "2024-01-15T11:13:48Z",
        "author_association": "COLLABORATOR",
        "body": "fixes #30 supercedes #34 Thanks to @mjdaoudi ",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1891949842/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": []
  },
  "31": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1873415772",
        "html_url": "https://github.com/mistralai/client-js/pull/31#issuecomment-1873415772",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/31",
        "id": 1873415772,
        "node_id": "IC_kwDOK23oNM5vqg5c",
        "user": {
          "login": "SanjeevKadam",
          "id": 45713166,
          "node_id": "MDQ6VXNlcjQ1NzEzMTY2",
          "avatar_url": "https://avatars.githubusercontent.com/u/45713166?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/SanjeevKadam",
          "html_url": "https://github.com/SanjeevKadam",
          "followers_url": "https://api.github.com/users/SanjeevKadam/followers",
          "following_url": "https://api.github.com/users/SanjeevKadam/following{/other_user}",
          "gists_url": "https://api.github.com/users/SanjeevKadam/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/SanjeevKadam/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/SanjeevKadam/subscriptions",
          "organizations_url": "https://api.github.com/users/SanjeevKadam/orgs",
          "repos_url": "https://api.github.com/users/SanjeevKadam/repos",
          "events_url": "https://api.github.com/users/SanjeevKadam/events{/privacy}",
          "received_events_url": "https://api.github.com/users/SanjeevKadam/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-01-01T17:44:44Z",
        "updated_at": "2024-01-01T17:44:44Z",
        "author_association": "CONTRIBUTOR",
        "body": "All Test case are passed.\r\nNo lint error",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1873415772/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": []
  },
  "29": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1870253553",
        "html_url": "https://github.com/mistralai/client-js/pull/29#issuecomment-1870253553",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/29",
        "id": 1870253553,
        "node_id": "IC_kwDOK23oNM5vec3x",
        "user": {
          "login": "SanjeevKadam",
          "id": 45713166,
          "node_id": "MDQ6VXNlcjQ1NzEzMTY2",
          "avatar_url": "https://avatars.githubusercontent.com/u/45713166?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/SanjeevKadam",
          "html_url": "https://github.com/SanjeevKadam",
          "followers_url": "https://api.github.com/users/SanjeevKadam/followers",
          "following_url": "https://api.github.com/users/SanjeevKadam/following{/other_user}",
          "gists_url": "https://api.github.com/users/SanjeevKadam/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/SanjeevKadam/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/SanjeevKadam/subscriptions",
          "organizations_url": "https://api.github.com/users/SanjeevKadam/orgs",
          "repos_url": "https://api.github.com/users/SanjeevKadam/repos",
          "events_url": "https://api.github.com/users/SanjeevKadam/events{/privacy}",
          "received_events_url": "https://api.github.com/users/SanjeevKadam/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2023-12-27T12:15:36Z",
        "updated_at": "2023-12-27T12:15:36Z",
        "author_association": "CONTRIBUTOR",
        "body": "1.  Pass all unit test case's.\r\n2.  Fixed all lint issues.",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1870253553/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2404831436",
        "html_url": "https://github.com/mistralai/client-js/pull/29#issuecomment-2404831436",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/29",
        "id": 2404831436,
        "node_id": "IC_kwDOK23oNM6PVtDM",
        "user": {
          "login": "GaspardBT",
          "id": 26529448,
          "node_id": "MDQ6VXNlcjI2NTI5NDQ4",
          "avatar_url": "https://avatars.githubusercontent.com/u/26529448?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GaspardBT",
          "html_url": "https://github.com/GaspardBT",
          "followers_url": "https://api.github.com/users/GaspardBT/followers",
          "following_url": "https://api.github.com/users/GaspardBT/following{/other_user}",
          "gists_url": "https://api.github.com/users/GaspardBT/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/GaspardBT/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/GaspardBT/subscriptions",
          "organizations_url": "https://api.github.com/users/GaspardBT/orgs",
          "repos_url": "https://api.github.com/users/GaspardBT/repos",
          "events_url": "https://api.github.com/users/GaspardBT/events{/privacy}",
          "received_events_url": "https://api.github.com/users/GaspardBT/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-10-10T11:25:49Z",
        "updated_at": "2024-10-10T11:25:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for opening this PR. We have **deprecated** this package in favor of [mistralai/client-ts](https://github.com/mistralai/client-ts), which is the new official Mistral client, **compatible** with both TypeScript and JavaScript.\r\n\r\nYou can find all installation information [here](https://github.com/mistralai/client-ts?tab=readme-ov-file#sdk-installation).\r\n\r\nThis change is effective starting with version 1.0.0 of the [npm package](https://www.npmjs.com/package/@mistralai/mistralai?activeTab=readme).\r\n\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/2404831436/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": []
  },
  "27": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1867908949",
        "html_url": "https://github.com/mistralai/client-js/pull/27#issuecomment-1867908949",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/27",
        "id": 1867908949,
        "node_id": "IC_kwDOK23oNM5vVgdV",
        "user": {
          "login": "Bam4d",
          "id": 1370765,
          "node_id": "MDQ6VXNlcjEzNzA3NjU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1370765?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Bam4d",
          "html_url": "https://github.com/Bam4d",
          "followers_url": "https://api.github.com/users/Bam4d/followers",
          "following_url": "https://api.github.com/users/Bam4d/following{/other_user}",
          "gists_url": "https://api.github.com/users/Bam4d/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Bam4d/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Bam4d/subscriptions",
          "organizations_url": "https://api.github.com/users/Bam4d/orgs",
          "repos_url": "https://api.github.com/users/Bam4d/repos",
          "events_url": "https://api.github.com/users/Bam4d/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Bam4d/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2023-12-22T17:12:19Z",
        "updated_at": "2023-12-22T17:12:19Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for this. I thought I had fixed it but must have missed it :dagger: ",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1867908949/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1891054609",
        "html_url": "https://github.com/mistralai/client-js/pull/27#issuecomment-1891054609",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/27",
        "id": 1891054609,
        "node_id": "IC_kwDOK23oNM5wtzQR",
        "user": {
          "login": "josiah-roberts",
          "id": 37082009,
          "node_id": "MDQ6VXNlcjM3MDgyMDA5",
          "avatar_url": "https://avatars.githubusercontent.com/u/37082009?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/josiah-roberts",
          "html_url": "https://github.com/josiah-roberts",
          "followers_url": "https://api.github.com/users/josiah-roberts/followers",
          "following_url": "https://api.github.com/users/josiah-roberts/following{/other_user}",
          "gists_url": "https://api.github.com/users/josiah-roberts/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/josiah-roberts/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/josiah-roberts/subscriptions",
          "organizations_url": "https://api.github.com/users/josiah-roberts/orgs",
          "repos_url": "https://api.github.com/users/josiah-roberts/repos",
          "events_url": "https://api.github.com/users/josiah-roberts/events{/privacy}",
          "received_events_url": "https://api.github.com/users/josiah-roberts/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2024-01-14T19:52:07Z",
        "updated_at": "2024-01-14T19:52:07Z",
        "author_association": "NONE",
        "body": "@Bam4d can y'all please cut a new release with this fix? The package is essentially un-usable in a TypeScript environment until you do.",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1891054609/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": []
  },
  "23": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1865085682",
        "html_url": "https://github.com/mistralai/client-js/pull/23#issuecomment-1865085682",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/23",
        "id": 1865085682,
        "node_id": "IC_kwDOK23oNM5vKvLy",
        "user": {
          "login": "willhama",
          "id": 23309429,
          "node_id": "MDQ6VXNlcjIzMzA5NDI5",
          "avatar_url": "https://avatars.githubusercontent.com/u/23309429?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/willhama",
          "html_url": "https://github.com/willhama",
          "followers_url": "https://api.github.com/users/willhama/followers",
          "following_url": "https://api.github.com/users/willhama/following{/other_user}",
          "gists_url": "https://api.github.com/users/willhama/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/willhama/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/willhama/subscriptions",
          "organizations_url": "https://api.github.com/users/willhama/orgs",
          "repos_url": "https://api.github.com/users/willhama/repos",
          "events_url": "https://api.github.com/users/willhama/events{/privacy}",
          "received_events_url": "https://api.github.com/users/willhama/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2023-12-20T20:23:33Z",
        "updated_at": "2023-12-20T20:23:33Z",
        "author_association": "CONTRIBUTOR",
        "body": "@Bam4d fixed the mentioned issues.\r\n\r\n- fixed the issues with double quotes and added the single quote config to eslint rules.\r\n- added doc for the automatic pull of env variable of the client",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1865085682/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": []
  },
  "22": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1863470062",
        "html_url": "https://github.com/mistralai/client-js/pull/22#issuecomment-1863470062",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/22",
        "id": 1863470062,
        "node_id": "IC_kwDOK23oNM5vEkvu",
        "user": {
          "login": "Bam4d",
          "id": 1370765,
          "node_id": "MDQ6VXNlcjEzNzA3NjU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1370765?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Bam4d",
          "html_url": "https://github.com/Bam4d",
          "followers_url": "https://api.github.com/users/Bam4d/followers",
          "following_url": "https://api.github.com/users/Bam4d/following{/other_user}",
          "gists_url": "https://api.github.com/users/Bam4d/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Bam4d/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Bam4d/subscriptions",
          "organizations_url": "https://api.github.com/users/Bam4d/orgs",
          "repos_url": "https://api.github.com/users/Bam4d/repos",
          "events_url": "https://api.github.com/users/Bam4d/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Bam4d/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2023-12-19T21:04:53Z",
        "updated_at": "2023-12-19T21:04:53Z",
        "author_association": "COLLABORATOR",
        "body": "Fixes #16 #14 #12 #18 #21 ",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1863470062/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1432388733",
        "pull_request_review_id": 1790379601,
        "id": 1432388733,
        "node_id": "PRRC_kwDOK23oNM5VYIR9",
        "diff_hunk": "@@ -42,19 +61,72 @@ class MistralClient {\n    * @return {Promise<*>}\n    */\n   _request = async function(method, path, request) {\n-    const response = await axios({\n+    const url = `${this.endpoint}/${path}`;\n+    const options = {\n       method: method,\n-      url: `${this.endpoint}/${path}`,\n-      data: request,\n       headers: {\n+        'Content-Type': 'application/json',\n         'Authorization': `Bearer ${this.apiKey}`,\n       },\n-      responseType: request?.stream ? 'stream' : 'json',\n-    }).catch((error) => {\n-      console.error(error);\n-      return error.response;\n-    });\n-    return response.data;\n+      body: method !== 'get' ? JSON.stringify(request) : null,\n+      timeout: this.timeout * 1000,\n+    };\n+\n+    for (let attempts = 0; attempts < this.maxRetries; attempts++) {\n+      try {\n+        const response = await fetch(url, options);\n+\n+        if (response.ok) {\n+          if (request?.stream) {\n+            if (isNode) {\n+              return response.body;\n+            } else {\n+              const reader = response.body.getReader();\n+              // Chrome does not support async iterators yet, so polyfill it\n+              const asyncIterator = async function* () {\n+                try {\n+                  const decoder = new TextDecoder();\n+                  while (true) {\n+                    // Read from the stream\n+                    const {done, value} = await reader.read();\n+                    // Exit if we're done\n+                    if (done) return;\n+                    // Else yield the chunk\n+                    yield decoder.decode(value);",
        "path": "src/client.js",
        "commit_id": "ab2978e0a0cbb3095128f22f13984dc120a0700a",
        "original_commit_id": "108daf89a254aa358d3b25cd961770e3664793fc",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "{stream: true} option? ",
        "created_at": "2023-12-20T08:15:09Z",
        "updated_at": "2023-12-20T08:15:10Z",
        "html_url": "https://github.com/mistralai/client-js/pull/22#discussion_r1432388733",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/22",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1432388733"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/22#discussion_r1432388733"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/22"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1432388733/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": null,
        "original_line": 95,
        "side": "RIGHT",
        "original_position": 114,
        "position": null,
        "subject_type": "line"
      }
    ]
  },
  "16": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1858046990",
        "html_url": "https://github.com/mistralai/client-js/pull/16#issuecomment-1858046990",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/16",
        "id": 1858046990,
        "node_id": "IC_kwDOK23oNM5uv4wO",
        "user": {
          "login": "mattlgroff",
          "id": 3247978,
          "node_id": "MDQ6VXNlcjMyNDc5Nzg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3247978?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mattlgroff",
          "html_url": "https://github.com/mattlgroff",
          "followers_url": "https://api.github.com/users/mattlgroff/followers",
          "following_url": "https://api.github.com/users/mattlgroff/following{/other_user}",
          "gists_url": "https://api.github.com/users/mattlgroff/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mattlgroff/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mattlgroff/subscriptions",
          "organizations_url": "https://api.github.com/users/mattlgroff/orgs",
          "repos_url": "https://api.github.com/users/mattlgroff/repos",
          "events_url": "https://api.github.com/users/mattlgroff/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mattlgroff/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2023-12-15T15:19:04Z",
        "updated_at": "2023-12-15T15:19:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "Draft PR that is the beginnings of a fix for the Cloudflare Workers issue\r\n\r\nError with Cloudflare Workers #8\r\n\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1858046990/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1858683614",
        "html_url": "https://github.com/mistralai/client-js/pull/16#issuecomment-1858683614",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/16",
        "id": 1858683614,
        "node_id": "IC_kwDOK23oNM5uyULe",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2023-12-16T02:19:33Z",
        "updated_at": "2023-12-16T02:19:33Z",
        "author_association": "CONTRIBUTOR",
        "body": "This WIP PR aside, moving to fetch seems like a good idea! \r\nAxios doesn't support streaming in the browser either\r\nSee #4 ",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1858683614/reactions",
          "total_count": 3,
          "+1": 3,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1858841774",
        "html_url": "https://github.com/mistralai/client-js/pull/16#issuecomment-1858841774",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/16",
        "id": 1858841774,
        "node_id": "IC_kwDOK23oNM5uy6yu",
        "user": {
          "login": "wordware-ai",
          "id": 102771702,
          "node_id": "O_kgDOBiAr9g",
          "avatar_url": "https://avatars.githubusercontent.com/u/102771702?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/wordware-ai",
          "html_url": "https://github.com/wordware-ai",
          "followers_url": "https://api.github.com/users/wordware-ai/followers",
          "following_url": "https://api.github.com/users/wordware-ai/following{/other_user}",
          "gists_url": "https://api.github.com/users/wordware-ai/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/wordware-ai/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/wordware-ai/subscriptions",
          "organizations_url": "https://api.github.com/users/wordware-ai/orgs",
          "repos_url": "https://api.github.com/users/wordware-ai/repos",
          "events_url": "https://api.github.com/users/wordware-ai/events{/privacy}",
          "received_events_url": "https://api.github.com/users/wordware-ai/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2023-12-16T15:19:20Z",
        "updated_at": "2023-12-16T15:19:20Z",
        "author_association": "NONE",
        "body": "Implemented and released as a separate package in case anyone can't wait for this PR to get merged https://www.npmjs.com/package/mistral-edge",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1858841774/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": []
  },
  "14": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1860791775",
        "html_url": "https://github.com/mistralai/client-js/pull/14#issuecomment-1860791775",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/14",
        "id": 1860791775,
        "node_id": "IC_kwDOK23oNM5u6W3f",
        "user": {
          "login": "flore2003",
          "id": 500358,
          "node_id": "MDQ6VXNlcjUwMDM1OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/500358?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flore2003",
          "html_url": "https://github.com/flore2003",
          "followers_url": "https://api.github.com/users/flore2003/followers",
          "following_url": "https://api.github.com/users/flore2003/following{/other_user}",
          "gists_url": "https://api.github.com/users/flore2003/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flore2003/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flore2003/subscriptions",
          "organizations_url": "https://api.github.com/users/flore2003/orgs",
          "repos_url": "https://api.github.com/users/flore2003/repos",
          "events_url": "https://api.github.com/users/flore2003/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flore2003/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2023-12-18T15:19:50Z",
        "updated_at": "2023-12-18T15:19:50Z",
        "author_association": "CONTRIBUTOR",
        "body": "This seems to fix #18, correct?",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1860791775/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1862277697",
        "html_url": "https://github.com/mistralai/client-js/pull/14#issuecomment-1862277697",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/14",
        "id": 1862277697,
        "node_id": "IC_kwDOK23oNM5vABpB",
        "user": {
          "login": "mikeyjkmo",
          "id": 11721757,
          "node_id": "MDQ6VXNlcjExNzIxNzU3",
          "avatar_url": "https://avatars.githubusercontent.com/u/11721757?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mikeyjkmo",
          "html_url": "https://github.com/mikeyjkmo",
          "followers_url": "https://api.github.com/users/mikeyjkmo/followers",
          "following_url": "https://api.github.com/users/mikeyjkmo/following{/other_user}",
          "gists_url": "https://api.github.com/users/mikeyjkmo/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mikeyjkmo/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mikeyjkmo/subscriptions",
          "organizations_url": "https://api.github.com/users/mikeyjkmo/orgs",
          "repos_url": "https://api.github.com/users/mikeyjkmo/repos",
          "events_url": "https://api.github.com/users/mikeyjkmo/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mikeyjkmo/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2023-12-19T07:53:17Z",
        "updated_at": "2023-12-19T07:53:17Z",
        "author_association": "NONE",
        "body": "Yes I believe so",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1862277697/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": []
  },
  "13": {
    "issue_comments": [],
    "review_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1427592342",
        "pull_request_review_id": 1783186236,
        "id": 1427592342,
        "node_id": "PRRC_kwDOK23oNM5VF1SW",
        "diff_hunk": "@@ -0,0 +1,235 @@\n+import axios, { AxiosAdapter } from 'axios'\n+import axiosRetry from 'axios-retry'\n+import { createParser } from 'eventsource-parser'\n+\n+const RETRY_STATUS_CODES = [429, 500, 502, 503, 504]\n+const ENDPOINT = 'https://api.mistral.ai'\n+\n+type Role = 'user' | 'system' | 'assistant'\n+type Model = 'mistral-tiny' | 'mistral-small' | 'mistral-medium' | string\n+\n+export interface Message {\n+  role: Role\n+  content: string\n+}\n+\n+export interface CompletionRequestOptions {\n+  model: string\n+  messages: Message[]\n+  temperature?: number\n+  maxTokens?: number\n+  topP?: number\n+  randomSeed?: number\n+  stream?: boolean\n+  safeMode?: boolean\n+}\n+\n+interface EmbeddingRequest {\n+  model: string\n+  input: string[]\n+}\n+\n+interface CompletionRequest {\n+  model: Model\n+  messages: Message[]\n+  temperature?: number\n+  max_tokens?: number\n+  top_p?: number\n+  random_seed?: number\n+  stream?: boolean\n+  safe_prompt?: boolean\n+}\n+\n+type CompletionEvent = {\n+  choices: Array<{\n+    delta: {\n+      content: string\n+    }\n+  }>\n+}\n+\n+export interface MistralClientOptions {\n+  adapter?: AxiosAdapter\n+  endpoint?: string\n+}\n+\n+/**\n+ * MistralClient\n+ * @return {MistralClient}\n+ */\n+class MistralClient {\n+  endpoint: string\n+  apiKey: string\n+  textDecoder: TextDecoder\n+  options: MistralClientOptions\n+\n+  /**\n+   * A simple and lightweight client for the Mistral API\n+   * @param apiKey can be set as an environment variable MISTRAL_API_KEY,\n+   * or provided in this parameter\n+   * @param endpointOrOptions - endpoint as a string, or options\n+   */\n+  constructor(\n+    apiKey = process.env.MISTRAL_API_KEY,\n+    endpointOrOptions?: string | MistralClientOptions\n+  ) {\n+    if (!apiKey) {\n+      throw new Error(\n+        'apiKey must be defined. Did you forget to set MISTRAL_API_KEY env?'\n+      )\n+    }\n+    this.apiKey = apiKey\n+    this.options =\n+      typeof endpointOrOptions === 'object' ? endpointOrOptions : {}\n+    this.endpoint =\n+      typeof endpointOrOptions === 'string'\n+        ? endpointOrOptions\n+        : endpointOrOptions?.endpoint ?? ENDPOINT\n+    this.textDecoder = new TextDecoder()\n+\n+    axiosRetry(axios, {\n+      retries: 3,\n+      retryCondition: error => {\n+        const status = error.response?.status\n+        return typeof status === 'number' && RETRY_STATUS_CODES.includes(status)\n+      },\n+      retryDelay: (retryCount, error) => {\n+        console.debug(`retry attempt: ${retryCount}`, error)\n+        return retryCount * 500\n+      }\n+    })\n+  }\n+\n+  private async _request(\n+    method: string,\n+    path: string,\n+    data?: object & { stream?: boolean }\n+  ): Promise<any> {\n+    const response = await axios({\n+      method,\n+      url: `${this.endpoint}/${path}`,\n+      data: data,\n+      headers: {\n+        Authorization: `Bearer ${this.apiKey}`\n+      },\n+      responseType: data?.stream ? 'stream' : 'json',\n+      adapter: this.options.adapter\n+    }).catch(error => {\n+      console.error(error)\n+      return error.response\n+    })\n+    return response.data\n+  }\n+\n+  private _makeChatCompletionRequest(\n+    model: string,\n+    messages: Message[],\n+    temperature?: number,\n+    maxTokens?: number,\n+    topP?: number,\n+    randomSeed?: number,\n+    stream?: boolean,\n+    safeMode?: boolean\n+  ): CompletionRequest {\n+    return {\n+      model,\n+      messages,\n+      temperature,\n+      max_tokens: maxTokens,\n+      top_p: topP,\n+      random_seed: randomSeed,\n+      stream,\n+      safe_prompt: safeMode\n+    }\n+  }\n+\n+  /**\n+   * Returns a list of the available models\n+   */\n+  public async listModels(): Promise<any> {\n+    return this._request('get', 'v1/models')\n+  }\n+\n+  /**\n+   * A chat endpoint without streaming\n+   */\n+  public async chat({\n+    model,\n+    messages,\n+    temperature,\n+    maxTokens,\n+    topP,\n+    randomSeed,\n+    safeMode\n+  }: CompletionRequestOptions): Promise<any> {\n+    const request = this._makeChatCompletionRequest(\n+      model,\n+      messages,\n+      temperature,\n+      maxTokens,\n+      topP,\n+      randomSeed,\n+      false,\n+      safeMode\n+    )\n+    return this._request('post', 'v1/chat/completions', request)\n+  }\n+\n+  /**\n+   * A chat endpoint with streaming\n+   */\n+  public chatStream({\n+    model,\n+    messages,\n+    temperature,\n+    maxTokens,\n+    topP,\n+    randomSeed,\n+    safeMode\n+  }: CompletionRequestOptions): AsyncGenerator<CompletionEvent, void> {\n+    const request = this._makeChatCompletionRequest(\n+      model,\n+      messages,\n+      temperature,\n+      maxTokens,\n+      topP,\n+      randomSeed,\n+      true,\n+      safeMode\n+    )\n+    const responsePromise = this._request(\n+      'post',\n+      'v1/chat/completions',\n+      request\n+    )\n+\n+    const decoder = this.textDecoder\n+    const events = async function* () {\n+      const chanel: CompletionEvent[] = []\n+      const parser = createParser(event => {\n+        if (event.type === 'event' && event.data !== '[DONE]') {\n+          const obj = JSON.parse(event.data)\n+          chanel.push(obj)\n+        }\n+      })\n+\n+      for await (const chunk of await responsePromise) {\n+        parser.feed(decoder.decode(chunk, { stream: true }))",
        "path": "src/client.ts",
        "commit_id": "c8aa7ee10de7826c66e50cb0205d902abab6835d",
        "original_commit_id": "c8aa7ee10de7826c66e50cb0205d902abab6835d",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "#12 ",
        "created_at": "2023-12-15T06:12:00Z",
        "updated_at": "2023-12-15T06:12:01Z",
        "html_url": "https://github.com/mistralai/client-js/pull/13#discussion_r1427592342",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/13",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1427592342"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/13#discussion_r1427592342"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/13"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1427592342/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 217,
        "original_line": 217,
        "side": "RIGHT",
        "original_position": 217,
        "position": 217,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1427592661",
        "pull_request_review_id": 1783186743,
        "id": 1427592661,
        "node_id": "PRRC_kwDOK23oNM5VF1XV",
        "diff_hunk": "@@ -0,0 +1,235 @@\n+import axios, { AxiosAdapter } from 'axios'\n+import axiosRetry from 'axios-retry'\n+import { createParser } from 'eventsource-parser'\n+\n+const RETRY_STATUS_CODES = [429, 500, 502, 503, 504]\n+const ENDPOINT = 'https://api.mistral.ai'\n+\n+type Role = 'user' | 'system' | 'assistant'\n+type Model = 'mistral-tiny' | 'mistral-small' | 'mistral-medium' | string\n+\n+export interface Message {\n+  role: Role\n+  content: string\n+}\n+\n+export interface CompletionRequestOptions {\n+  model: string\n+  messages: Message[]\n+  temperature?: number\n+  maxTokens?: number\n+  topP?: number\n+  randomSeed?: number\n+  stream?: boolean\n+  safeMode?: boolean\n+}\n+\n+interface EmbeddingRequest {\n+  model: string\n+  input: string[]\n+}\n+\n+interface CompletionRequest {\n+  model: Model\n+  messages: Message[]\n+  temperature?: number\n+  max_tokens?: number\n+  top_p?: number\n+  random_seed?: number\n+  stream?: boolean\n+  safe_prompt?: boolean\n+}\n+\n+type CompletionEvent = {\n+  choices: Array<{\n+    delta: {\n+      content: string\n+    }\n+  }>\n+}\n+\n+export interface MistralClientOptions {\n+  adapter?: AxiosAdapter\n+  endpoint?: string\n+}\n+\n+/**\n+ * MistralClient\n+ * @return {MistralClient}\n+ */\n+class MistralClient {\n+  endpoint: string\n+  apiKey: string\n+  textDecoder: TextDecoder\n+  options: MistralClientOptions\n+\n+  /**\n+   * A simple and lightweight client for the Mistral API\n+   * @param apiKey can be set as an environment variable MISTRAL_API_KEY,\n+   * or provided in this parameter\n+   * @param endpointOrOptions - endpoint as a string, or options\n+   */\n+  constructor(\n+    apiKey = process.env.MISTRAL_API_KEY,\n+    endpointOrOptions?: string | MistralClientOptions\n+  ) {\n+    if (!apiKey) {\n+      throw new Error(\n+        'apiKey must be defined. Did you forget to set MISTRAL_API_KEY env?'\n+      )\n+    }\n+    this.apiKey = apiKey\n+    this.options =\n+      typeof endpointOrOptions === 'object' ? endpointOrOptions : {}\n+    this.endpoint =\n+      typeof endpointOrOptions === 'string'\n+        ? endpointOrOptions\n+        : endpointOrOptions?.endpoint ?? ENDPOINT\n+    this.textDecoder = new TextDecoder()\n+\n+    axiosRetry(axios, {\n+      retries: 3,\n+      retryCondition: error => {\n+        const status = error.response?.status\n+        return typeof status === 'number' && RETRY_STATUS_CODES.includes(status)\n+      },\n+      retryDelay: (retryCount, error) => {\n+        console.debug(`retry attempt: ${retryCount}`, error)\n+        return retryCount * 500\n+      }\n+    })\n+  }\n+\n+  private async _request(\n+    method: string,\n+    path: string,\n+    data?: object & { stream?: boolean }\n+  ): Promise<any> {\n+    const response = await axios({\n+      method,\n+      url: `${this.endpoint}/${path}`,\n+      data: data,\n+      headers: {\n+        Authorization: `Bearer ${this.apiKey}`\n+      },\n+      responseType: data?.stream ? 'stream' : 'json',\n+      adapter: this.options.adapter\n+    }).catch(error => {\n+      console.error(error)\n+      return error.response\n+    })\n+    return response.data\n+  }\n+\n+  private _makeChatCompletionRequest(\n+    model: string,\n+    messages: Message[],\n+    temperature?: number,\n+    maxTokens?: number,\n+    topP?: number,\n+    randomSeed?: number,\n+    stream?: boolean,\n+    safeMode?: boolean\n+  ): CompletionRequest {\n+    return {\n+      model,\n+      messages,\n+      temperature,\n+      max_tokens: maxTokens,\n+      top_p: topP,\n+      random_seed: randomSeed,\n+      stream,\n+      safe_prompt: safeMode\n+    }\n+  }\n+\n+  /**\n+   * Returns a list of the available models\n+   */\n+  public async listModels(): Promise<any> {\n+    return this._request('get', 'v1/models')\n+  }\n+\n+  /**\n+   * A chat endpoint without streaming\n+   */\n+  public async chat({\n+    model,\n+    messages,\n+    temperature,\n+    maxTokens,\n+    topP,\n+    randomSeed,\n+    safeMode\n+  }: CompletionRequestOptions): Promise<any> {\n+    const request = this._makeChatCompletionRequest(\n+      model,\n+      messages,\n+      temperature,\n+      maxTokens,\n+      topP,\n+      randomSeed,\n+      false,\n+      safeMode\n+    )\n+    return this._request('post', 'v1/chat/completions', request)\n+  }\n+\n+  /**\n+   * A chat endpoint with streaming\n+   */\n+  public chatStream({\n+    model,\n+    messages,\n+    temperature,\n+    maxTokens,\n+    topP,\n+    randomSeed,\n+    safeMode\n+  }: CompletionRequestOptions): AsyncGenerator<CompletionEvent, void> {\n+    const request = this._makeChatCompletionRequest(\n+      model,\n+      messages,\n+      temperature,\n+      maxTokens,\n+      topP,\n+      randomSeed,\n+      true,\n+      safeMode\n+    )\n+    const responsePromise = this._request(\n+      'post',\n+      'v1/chat/completions',\n+      request\n+    )\n+\n+    const decoder = this.textDecoder\n+    const events = async function* () {\n+      const chanel: CompletionEvent[] = []\n+      const parser = createParser(event => {\n+        if (event.type === 'event' && event.data !== '[DONE]') {\n+          const obj = JSON.parse(event.data)\n+          chanel.push(obj)\n+        }\n+      })\n+\n+      for await (const chunk of await responsePromise) {\n+        parser.feed(decoder.decode(chunk, { stream: true }))",
        "path": "src/client.ts",
        "commit_id": "c8aa7ee10de7826c66e50cb0205d902abab6835d",
        "original_commit_id": "c8aa7ee10de7826c66e50cb0205d902abab6835d",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "@lerela \r\n\r\nShould I finish this?\r\n",
        "created_at": "2023-12-15T06:12:37Z",
        "updated_at": "2023-12-15T06:12:37Z",
        "html_url": "https://github.com/mistralai/client-js/pull/13#discussion_r1427592661",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/13",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1427592661"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/13#discussion_r1427592661"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/13"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1427592661/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 217,
        "original_line": 217,
        "side": "RIGHT",
        "in_reply_to_id": 1427592342,
        "original_position": 217,
        "position": 217,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1427593332",
        "pull_request_review_id": 1783187798,
        "id": 1427593332,
        "node_id": "PRRC_kwDOK23oNM5VF1h0",
        "diff_hunk": "@@ -0,0 +1,235 @@\n+import axios, { AxiosAdapter } from 'axios'\n+import axiosRetry from 'axios-retry'\n+import { createParser } from 'eventsource-parser'\n+\n+const RETRY_STATUS_CODES = [429, 500, 502, 503, 504]\n+const ENDPOINT = 'https://api.mistral.ai'\n+\n+type Role = 'user' | 'system' | 'assistant'\n+type Model = 'mistral-tiny' | 'mistral-small' | 'mistral-medium' | string\n+\n+export interface Message {\n+  role: Role\n+  content: string\n+}\n+\n+export interface CompletionRequestOptions {\n+  model: string\n+  messages: Message[]\n+  temperature?: number\n+  maxTokens?: number\n+  topP?: number\n+  randomSeed?: number\n+  stream?: boolean\n+  safeMode?: boolean\n+}\n+\n+interface EmbeddingRequest {\n+  model: string\n+  input: string[]\n+}\n+\n+interface CompletionRequest {\n+  model: Model\n+  messages: Message[]\n+  temperature?: number\n+  max_tokens?: number\n+  top_p?: number\n+  random_seed?: number\n+  stream?: boolean\n+  safe_prompt?: boolean\n+}\n+\n+type CompletionEvent = {\n+  choices: Array<{\n+    delta: {\n+      content: string\n+    }\n+  }>\n+}\n+\n+export interface MistralClientOptions {\n+  adapter?: AxiosAdapter\n+  endpoint?: string\n+}\n+\n+/**\n+ * MistralClient\n+ * @return {MistralClient}\n+ */\n+class MistralClient {\n+  endpoint: string\n+  apiKey: string\n+  textDecoder: TextDecoder\n+  options: MistralClientOptions\n+\n+  /**\n+   * A simple and lightweight client for the Mistral API\n+   * @param apiKey can be set as an environment variable MISTRAL_API_KEY,\n+   * or provided in this parameter\n+   * @param endpointOrOptions - endpoint as a string, or options\n+   */\n+  constructor(\n+    apiKey = process.env.MISTRAL_API_KEY,\n+    endpointOrOptions?: string | MistralClientOptions",
        "path": "src/client.ts",
        "commit_id": "c8aa7ee10de7826c66e50cb0205d902abab6835d",
        "original_commit_id": "c8aa7ee10de7826c66e50cb0205d902abab6835d",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Added adapter: AxiosAdapter to options",
        "created_at": "2023-12-15T06:13:53Z",
        "updated_at": "2023-12-15T06:13:53Z",
        "html_url": "https://github.com/mistralai/client-js/pull/13#discussion_r1427593332",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/13",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1427593332"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/13#discussion_r1427593332"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/13"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1427593332/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 74,
        "original_line": 74,
        "side": "RIGHT",
        "original_position": 74,
        "position": 74,
        "subject_type": "line"
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1428826815",
        "pull_request_review_id": 1785185774,
        "id": 1428826815,
        "node_id": "PRRC_kwDOK23oNM5VKiq_",
        "diff_hunk": "@@ -0,0 +1,235 @@\n+import axios, { AxiosAdapter } from 'axios'\n+import axiosRetry from 'axios-retry'\n+import { createParser } from 'eventsource-parser'\n+\n+const RETRY_STATUS_CODES = [429, 500, 502, 503, 504]\n+const ENDPOINT = 'https://api.mistral.ai'\n+\n+type Role = 'user' | 'system' | 'assistant'\n+type Model = 'mistral-tiny' | 'mistral-small' | 'mistral-medium' | string\n+\n+export interface Message {\n+  role: Role\n+  content: string\n+}\n+\n+export interface CompletionRequestOptions {\n+  model: string\n+  messages: Message[]\n+  temperature?: number\n+  maxTokens?: number\n+  topP?: number\n+  randomSeed?: number\n+  stream?: boolean\n+  safeMode?: boolean\n+}\n+\n+interface EmbeddingRequest {\n+  model: string\n+  input: string[]\n+}\n+\n+interface CompletionRequest {\n+  model: Model\n+  messages: Message[]\n+  temperature?: number\n+  max_tokens?: number\n+  top_p?: number\n+  random_seed?: number\n+  stream?: boolean\n+  safe_prompt?: boolean\n+}\n+\n+type CompletionEvent = {\n+  choices: Array<{\n+    delta: {\n+      content: string\n+    }\n+  }>\n+}\n+\n+export interface MistralClientOptions {\n+  adapter?: AxiosAdapter\n+  endpoint?: string\n+}\n+\n+/**\n+ * MistralClient\n+ * @return {MistralClient}\n+ */\n+class MistralClient {\n+  endpoint: string\n+  apiKey: string\n+  textDecoder: TextDecoder\n+  options: MistralClientOptions\n+\n+  /**\n+   * A simple and lightweight client for the Mistral API\n+   * @param apiKey can be set as an environment variable MISTRAL_API_KEY,\n+   * or provided in this parameter\n+   * @param endpointOrOptions - endpoint as a string, or options\n+   */\n+  constructor(\n+    apiKey = process.env.MISTRAL_API_KEY,\n+    endpointOrOptions?: string | MistralClientOptions",
        "path": "src/client.ts",
        "commit_id": "c8aa7ee10de7826c66e50cb0205d902abab6835d",
        "original_commit_id": "c8aa7ee10de7826c66e50cb0205d902abab6835d",
        "user": {
          "login": "sublimator",
          "id": 525211,
          "node_id": "MDQ6VXNlcjUyNTIxMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/525211?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sublimator",
          "html_url": "https://github.com/sublimator",
          "followers_url": "https://api.github.com/users/sublimator/followers",
          "following_url": "https://api.github.com/users/sublimator/following{/other_user}",
          "gists_url": "https://api.github.com/users/sublimator/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sublimator/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sublimator/subscriptions",
          "organizations_url": "https://api.github.com/users/sublimator/orgs",
          "repos_url": "https://api.github.com/users/sublimator/repos",
          "events_url": "https://api.github.com/users/sublimator/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sublimator/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "body": "Though I think just using fetch is likely better at this point? ",
        "created_at": "2023-12-16T14:39:28Z",
        "updated_at": "2023-12-16T14:39:28Z",
        "html_url": "https://github.com/mistralai/client-js/pull/13#discussion_r1428826815",
        "pull_request_url": "https://api.github.com/repos/mistralai/client-js/pulls/13",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1428826815"
          },
          "html": {
            "href": "https://github.com/mistralai/client-js/pull/13#discussion_r1428826815"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/mistralai/client-js/pulls/13"
          }
        },
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/pulls/comments/1428826815/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 74,
        "original_line": 74,
        "side": "RIGHT",
        "in_reply_to_id": 1427593332,
        "original_position": 74,
        "position": 74,
        "subject_type": "line"
      }
    ]
  },
  "10": {
    "issue_comments": [
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1857079546",
        "html_url": "https://github.com/mistralai/client-js/pull/10#issuecomment-1857079546",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/10",
        "id": 1857079546,
        "node_id": "IC_kwDOK23oNM5usMj6",
        "user": {
          "login": "oliviermills",
          "id": 6075303,
          "node_id": "MDQ6VXNlcjYwNzUzMDM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6075303?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/oliviermills",
          "html_url": "https://github.com/oliviermills",
          "followers_url": "https://api.github.com/users/oliviermills/followers",
          "following_url": "https://api.github.com/users/oliviermills/following{/other_user}",
          "gists_url": "https://api.github.com/users/oliviermills/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/oliviermills/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/oliviermills/subscriptions",
          "organizations_url": "https://api.github.com/users/oliviermills/orgs",
          "repos_url": "https://api.github.com/users/oliviermills/repos",
          "events_url": "https://api.github.com/users/oliviermills/events{/privacy}",
          "received_events_url": "https://api.github.com/users/oliviermills/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2023-12-15T00:29:06Z",
        "updated_at": "2023-12-15T00:29:06Z",
        "author_association": "NONE",
        "body": "To test, create a .ts script and `import MistralClient from '@mistralai/mistralai';` .. types are correctly recognized, e.g. \r\n<img width=\"798\" alt=\"image\" src=\"https://github.com/mistralai/client-js/assets/6075303/3278745b-bf9e-49be-af2e-ff298a8b7366\">\r\n ",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1857079546/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1860857549",
        "html_url": "https://github.com/mistralai/client-js/pull/10#issuecomment-1860857549",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/10",
        "id": 1860857549,
        "node_id": "IC_kwDOK23oNM5u6m7N",
        "user": {
          "login": "flore2003",
          "id": 500358,
          "node_id": "MDQ6VXNlcjUwMDM1OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/500358?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/flore2003",
          "html_url": "https://github.com/flore2003",
          "followers_url": "https://api.github.com/users/flore2003/followers",
          "following_url": "https://api.github.com/users/flore2003/following{/other_user}",
          "gists_url": "https://api.github.com/users/flore2003/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/flore2003/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/flore2003/subscriptions",
          "organizations_url": "https://api.github.com/users/flore2003/orgs",
          "repos_url": "https://api.github.com/users/flore2003/repos",
          "events_url": "https://api.github.com/users/flore2003/events{/privacy}",
          "received_events_url": "https://api.github.com/users/flore2003/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2023-12-18T15:45:19Z",
        "updated_at": "2023-12-18T15:45:19Z",
        "author_association": "CONTRIBUTOR",
        "body": "FYI, I opened a new PR with extended TypeScript defs at #20. Thanks for the work here!",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1860857549/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      },
      {
        "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1861221205",
        "html_url": "https://github.com/mistralai/client-js/pull/10#issuecomment-1861221205",
        "issue_url": "https://api.github.com/repos/mistralai/client-js/issues/10",
        "id": 1861221205,
        "node_id": "IC_kwDOK23oNM5u7_tV",
        "user": {
          "login": "oliviermills",
          "id": 6075303,
          "node_id": "MDQ6VXNlcjYwNzUzMDM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6075303?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/oliviermills",
          "html_url": "https://github.com/oliviermills",
          "followers_url": "https://api.github.com/users/oliviermills/followers",
          "following_url": "https://api.github.com/users/oliviermills/following{/other_user}",
          "gists_url": "https://api.github.com/users/oliviermills/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/oliviermills/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/oliviermills/subscriptions",
          "organizations_url": "https://api.github.com/users/oliviermills/orgs",
          "repos_url": "https://api.github.com/users/oliviermills/repos",
          "events_url": "https://api.github.com/users/oliviermills/events{/privacy}",
          "received_events_url": "https://api.github.com/users/oliviermills/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "created_at": "2023-12-18T18:06:50Z",
        "updated_at": "2023-12-18T18:06:50Z",
        "author_association": "NONE",
        "body": "Superceded by #20 ",
        "reactions": {
          "url": "https://api.github.com/repos/mistralai/client-js/issues/comments/1861221205/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "performed_via_github_app": null
      }
    ],
    "review_comments": []
  }
}